{"version":3,"sources":["components/Signup/Signup.tsx","components/Login/index.tsx","components/LandingPage/index.tsx","components/Onboarding/CandidateOnboarding.tsx","components/Onboarding/RecruiterOnboarding.tsx","components/JobPostingForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabPane","Tabs","Signup","useState","visible","setVisible","onFinish","values","console","log","onFinishFailed","errorInfo","centered","maskClosable","bodyStyle","padding","width","footer","onCancel","defaultActiveKey","onChange","val","tab","name","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","className","placeholder","Password","LockOutlined","type","htmlType","block","style","display","justifyContent","to","showIcon","href","LandingPage","Option","Select","CandidateOnboarding","labelCol","span","wrapperCol","label","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","value","mode","allowClear","map","itm","TextArea","offset","marginLeft","RecruiterOnboarding","JobPostingForm","x","App","useEffect","localStorage","getItem","setItem","path","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5a5e75b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Alert, Modal, Tabs } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\n\nconst Signup = () => {\n\tconst [visible, setVisible] = useState(true);\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\treturn (\n\t\t<Modal \n\t\t\tvisible={visible}\n\t\t\t// title=\"Sign up\"\n\t\t\tcentered\n\t\t\t// destroyOnClose\n\t\t\tmaskClosable={false}\n\t\t\t// bodyStyle={{height:'500px'}}\n\t\t\tbodyStyle={{ padding: '40px' }}\n\t\t\twidth='420px'\n\t\t\t// onOk={handleSubmit}\n\t\t\t// okText={'Save'}\n\t\t\t// cancelText={'Cancel'}\n\t\t\tfooter={null}\n\t\t\tonCancel={() => {\n\t\t\t\tsetVisible(false)\n\t\t\t}}\n\t\t>\n\t\t\t<Tabs defaultActiveKey=\"Recruiter\" onChange={(val: any) => console.log(val)} centered>\n\t\t\t\t<TabPane tab=\"Employee\" key=\"Employee\">\n\t\t\t\t\tForm hai\n\t\t\t\t</TabPane>\n\t\t\t\t<TabPane tab=\"Recruiter\" key=\"Recruiter\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// {...layout}\n\t\t\t\t\t\tname=\"basic\"\n\t\t\t\t\t\t// labelCol={{ span: 4 }}\n\t\t\t\t\t\t// wrapperCol={{ span: 16 }}\n\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\tonFinishFailed={onFinishFailed}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t// label=\"Username\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Please input your username!' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t// label=\"Password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Please input your password!' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block>\n\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n\t\t\t\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</TabPane>\n\t\t\t\t<TabPane tab=\"Verify Email\" key=\"emailverification\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// {...layout}\n\t\t\t\t\t\tname=\"Email verification\"\n\t\t\t\t\t\t// labelCol={{ span: 4 }}\n\t\t\t\t\t\t// wrapperCol={{ span: 16 }}\n\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\tonFinishFailed={onFinishFailed}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Alert message=\"Verification pin successfully sent to your email\" type=\"success\" showIcon />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t// label=\"Username\"\n\t\t\t\t\t\t\tname=\"pin\"\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Please input pin sent on your email!' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input prefix={<UserOutlined />} placeholder=\"PIN\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block>\n\t\t\t\t\t\t\t\tConfirm sign up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</TabPane>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n}\n\nexport default Signup;","import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, Modal, Tabs } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\n\nconst Signup = () => {\n\tconst [visible, setVisible] = useState(true);\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\tconst layout = {\n\t\t// labelCol: { span: 4 },\n\t\twrapperCol: { offset: 4, span: 16 },\n\t};\n\n\tconst tailLayout = {\n\t\twrapperCol: { offset: 8, span: 16 },\n\t};\n\n\treturn (\n\t\t<Modal \n\t\t\tvisible={visible}\n\t\t\t// title=\"Sign up\"\n\t\t\tcentered\n\t\t\t// destroyOnClose\n\t\t\tmaskClosable={false}\n\t\t\t// bodyStyle={{height:'500px'}}\n\t\t\tbodyStyle={{ padding: '40px' }}\n\t\t\twidth='420px'\n\t\t\t// onOk={handleSubmit}\n\t\t\t// okText={'Save'}\n\t\t\t// cancelText={'Cancel'}\n\t\t\tfooter={null}\n\t\t\tonCancel={() => {\n\t\t\t\tsetVisible(false)\n\t\t\t}}\n\t\t>\n\t\t\t<Tabs defaultActiveKey=\"1\" onChange={(val: any) => console.log(val)} centered>\n\t\t\t\t<TabPane tab=\"Employee\" key=\"Employee\">\n\t\t\t\t\tFOrm hai\n\t\t\t\t</TabPane>\n\t\t\t\t<TabPane tab=\"Recruiter\" key=\"Recruiter\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\t// {...layout}\n\t\t\t\t\t\tname=\"basic\"\n\t\t\t\t\t\t// labelCol={{ span: 4 }}\n\t\t\t\t\t\t// wrapperCol={{ span: 16 }}\n\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\tonFinishFailed={onFinishFailed}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t// label=\"Username\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Please input your username!' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t// label=\"Password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\trules={[{ required: true, message: 'Please input your password!' }]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Button htmlType=\"submit\" block>\n\t\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t\t\t\t<a className=\"login-form-forgot\" href=\"\">\n\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<Link to=\"/signup\">\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t</TabPane>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n}\n\nexport default Signup;","import React from 'react';\n\nconst LandingPage = () => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                Hello Geek, you're at the landing page\n            </header>\n        </div>\n    )\n}\n\nexport default LandingPage;","import React, { useState } from 'react';\nimport { Form, Input, Button, Select, InputNumber, Tabs } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst { Option } = Select;\n\nconst CandidateOnboarding = () => {\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\treturn (\n        <div className=\"onboarding\">\n            <header className=\"App-header\">Create your profile</header>\n            <Form\n                name=\"Candidate onboarding\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 12 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Full name\"\n                    name=\"fullName\"\n                    rules={[{ required: true, message: 'Please enter your full name!' }]}\n                >\n                    <Input placeholder=\"Please enter your full name\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Job title\"\n                    name=\"jobTitle\"\n                    rules={[{ required: true, message: 'Please enter your current job title!' }]}\n                >\n                    <Input placeholder=\"Please enter your current job title\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Location\"\n                    name=\"location\"\n                    rules={[{ required: true, message: 'Please select your current location!' }]}\n                >\n                    <Select\n                        showSearch\n                        // style={{ width: 200 }}\n                        placeholder=\"Please select your current location\"\n                        optionFilterProp=\"children\"\n                        // onChange={onChange}\n                        // onFocus={onFocus}\n                        // onBlur={onBlur}\n                        // onSearch={onSearch}\n                        filterOption={(input, option) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Whatsapp number\"\n                    name=\"whatsappNumber\"\n                    rules={[{ required: true, message: 'Please add your whatsapp number!' }]}\n                >\n                    <Input placeholder=\"Please add your whatsapp number\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Please enter an email address!' }]}\n                >\n                    <Input placeholder=\"Please enter an email address\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Years of experience\"\n                    name=\"yearsOfExperience\"\n                    rules={[{ required: true, message: 'Please select years of experience!' }]}\n                >\n                    <Input placeholder=\"Please select years of experience\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Skills\"\n                    name=\"skills\"\n                    rules={[{ required: true, message: 'Please select atleast three skills!' }]}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        allowClear\n                        // style={{ width: '100%' }}\n                        placeholder=\"Please select atleast three skills\"\n                        // defaultValue={['a10', 'c12']}\n                        // onChange={handleChange}\n                    >\n                        {['React', 'JavaScript', 'HTML', 'CSS'].map(itm => <Option value={itm}>{itm}</Option>)}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Current ctc\"\n                    name=\"currentCtc\"\n                    rules={[{ required: true, message: 'Please add current ctc!' }]}\n                >\n                    <Input placeholder=\"Please add current ctc\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Introduction\"\n                    name=\"introduction\"\n                    rules={[{ required: true, message: 'Please enter a brief introduction about yourself!' }]}\n                >\n                    <Input.TextArea placeholder=\"Please enter a brief introduction about yourself\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Github\"\n                    name=\"github\"\n                    rules={[{ required: true, message: 'Please enter your github profile link!' }]}\n                >\n                    <Input placeholder=\"Please enter your github profile link\" />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 12 }}>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit details\n                        </Button>\n                        <Button style={{ marginLeft: '10px' }}>\n                            Skip\n                        </Button>\n                    </div>\n                </Form.Item>\n            </Form>\n\t\t</div>\n\t);\n}\n\nexport default CandidateOnboarding;","import React, { useState } from 'react';\nimport { Form, Input, Button, Select, InputNumber, Tabs } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst { Option } = Select;\n\nconst RecruiterOnboarding = () => {\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\treturn (\n        <div className=\"onboarding\">\n            <header className=\"App-header\">Create your profile</header>\n            <Form\n                name=\"Candidate onboarding\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 12 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Company name\"\n                    name=\"companyName\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input placeholder=\"Please enter your full name\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Industry\"\n                    name=\"industry\"\n                    rules={[{ required: true, message: 'Please enter the company name!' }]}\n                >\n                    <Select\n                        showSearch\n                        // style={{ width: 200 }}\n                        placeholder=\"Please select your current location\"\n                        optionFilterProp=\"children\"\n                        // onChange={onChange}\n                        // onFocus={onFocus}\n                        // onBlur={onBlur}\n                        // onSearch={onSearch}\n                        filterOption={(input, option) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Location\"\n                    name=\"location\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Select\n                        showSearch\n                        // style={{ width: 200 }}\n                        placeholder=\"Please select your current location\"\n                        optionFilterProp=\"children\"\n                        // onChange={onChange}\n                        // onFocus={onFocus}\n                        // onBlur={onBlur}\n                        // onSearch={onSearch}\n                        filterOption={(input, option) =>\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                        }\n                    >\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Whatsapp number\"\n                    name=\"whatsappNumber\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please add your whatsapp number\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please enter an email address\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Employee size\"\n                    name=\"numberOfEmployees\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please select years of experience\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Skills\"\n                    name=\"skills\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        allowClear\n                        // style={{ width: '100%' }}\n                        placeholder=\"Please select atleast three skills\"\n                        // defaultValue={['a10', 'c12']}\n                        // onChange={handleChange}\n                    >\n                        {['React', 'JavaScript', 'HTML', 'CSS'].map(itm => <Option value={itm}>{itm}</Option>)}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"About\"\n                    name=\"about\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.TextArea placeholder=\"about\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Website\"\n                    name=\"website\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"website\" />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 12 }}>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit details\n                        </Button>\n                        <Button style={{ marginLeft: '10px' }}>\n                            Skip\n                        </Button>\n                    </div>\n                </Form.Item>\n            </Form>\n\t\t</div>\n\t);\n}\n\nexport default RecruiterOnboarding;","import React, { useState } from 'react';\nimport { Form, Input, Button, Select, InputNumber, Tabs } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst { Option } = Select;\n\nconst JobPostingForm = () => {\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\n\treturn (\n        <div className=\"onboarding\">\n            <header className=\"App-header\">Add a job</header>\n            <Form\n                name=\"Add a job\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 12 }}\n                initialValues={{ remember: true }}x\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Job title\"\n                    name=\"jobTitle\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input placeholder=\"Please enter your full name\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Type of job position\"\n                    name=\"typeOfPosition\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please enter your current job title\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Desired skills\"\n                    name=\"desiredSkills\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        allowClear\n                        // style={{ width: '100%' }}\n                        placeholder=\"Please select atleast three skills\"\n                        // defaultValue={['a10', 'c12']}\n                        // onChange={handleChange}\n                    >\n                        {['React', 'JavaScript', 'HTML', 'CSS'].map(itm => <Option value={itm}>{itm}</Option>)}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Office locations\"\n                    name=\"officeLocations\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Select\n                        mode=\"multiple\"\n                        allowClear\n                        // style={{ width: '100%' }}\n                        placeholder=\"Please select atleast three skills\"\n                        // defaultValue={['a10', 'c12']}\n                        // onChange={handleChange}\n                    >\n                        {['React', 'JavaScript', 'HTML', 'CSS'].map(itm => <Option value={itm}>{itm}</Option>)}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Experience range\"\n                    name=\"experienceRange\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please select years of experience\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Annual salary\"\n                    name=\"annualSalary\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input placeholder=\"Please select years of experience\" />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Job description\"\n                    name=\"jobDescription\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.TextArea placeholder=\"about\" />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 12 }}>\n                    <div\n                        // style={{ display: 'flex', justifyContent: 'flex-end' }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Create job\n                        </Button>\n                        <Button style={{ marginLeft: '10px' }}>\n                            Cancel\n                        </Button>\n                    </div>\n                </Form.Item>\n            </Form>\n\t\t</div>\n\t);\n}\n\nexport default JobPostingForm;","import React, { useEffect } from 'react';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Switch, \n  Link,  \n  Redirect\n} from \"react-router-dom\";\nimport Signup from './components/Signup/Signup.tsx';\nimport Login from './components/Login';\nimport LandingPage from './components/LandingPage';\nimport CandidateOnboarding from './components/Onboarding/CandidateOnboarding.tsx';\nimport RecruiterOnboarding from './components/Onboarding/RecruiterOnboarding.tsx';\nimport JobPostingForm from './components/JobPostingForm';\nimport './App.scss';\n\nfunction App() {\n\n  useEffect(() => {\n    if (!localStorage.getItem('token')) {\n      // history.push(\"/Login\")\n    }\n    else localStorage.setItem('token', 'abc');\n    console.log(localStorage)\n  }, [])\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/Landing\">\n          <LandingPage />\n        </Route>\n        <Route path=\"/candidate/onboarding\">\n          <CandidateOnboarding />\n        </Route>\n        <Route path=\"/recruiter/onboarding\">\n          <RecruiterOnboarding />\n        </Route>\n        <Route path=\"/recruiter/postjob\">\n          <JobPostingForm />\n        </Route>\n        <Route path=\"/\">\n          <LandingPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}