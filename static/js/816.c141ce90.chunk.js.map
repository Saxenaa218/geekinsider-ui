{"version":3,"file":"static/js/816.c141ce90.chunk.js","mappings":"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","sources":["components/SkillSection/SkillSection.tsx","pages/Recruiter/RecruiterSearch/components/RecruiterSearchDetails.tsx","pages/Recruiter/RecruiterSearch/RecruiterSearchResults.tsx","pages/Recruiter/RecruiterSearch/RecruiterSearch.tsx"],"sourcesContent":["import React from \"react\";\nimport { Progress } from \"antd\";\nimport { SkillSectionPropTypes } from \".\";\n\nconst SkillSection: React.FC<SkillSectionPropTypes> = (props) => {\n  const { gitInfo } = props;\n  const { repoCount, skills, skillsOrder } = gitInfo;\n  return (\n    <>\n      <section className=\"skills-section\">\n        <h3>\n          <b>Skills</b>\n        </h3>\n        {skills.map((itm: string, index: number) => {\n          return (\n            <>\n              <span>{itm}</span>\n              <Progress\n                percent={skillsOrder[index]}\n                showInfo={false}\n                strokeColor=\"#F2EE8B\"\n              />\n            </>\n          );\n        })}\n      </section>\n      {Boolean(repoCount) && (\n        <section className=\"github-repo-section\">\n          <h3>\n            <b>Github repo count</b>\n          </h3>\n          <h2>{repoCount}</h2>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default SkillSection;\n","import React, { useEffect } from \"react\";\nimport { Card, Button } from \"antd\";\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\nimport { FaGithub, FaWhatsapp } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport {\n  generateGithubUrl,\n  getWhatsAppUrl,\n  iconStyles,\n} from \"../../../../utils\";\nimport About from \"../../../../components/About\";\nimport { StateTypes, fetchCandidateDetails } from \"../../../../redux\";\nimport SkillSection from \"../../../../components/SkillSection\";\nimport \"./RecruiterSearchDetails.scss\";\n\nconst RecruiterSearchDetails: React.FC<any> = (props) => {\n  const {\n    aboutid,\n    ctc,\n    exp,\n    githubUrl,\n    jobTitle,\n    location,\n    name,\n    skills,\n    whatsappNumber,\n    about,\n    fetchCandidateDetails,\n    gitInfo,\n    searchType,\n  } = props;\n\n  useEffect(() => {\n    if (!gitInfo) {\n      fetchCandidateDetails(aboutid);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!gitInfo) {\n      fetchCandidateDetails(aboutid);\n    }\n  }, [aboutid, searchType]);\n\n  return (\n    <div className=\"recruiter-search-details\">\n      <section className=\"each-widget\">\n        <div className=\"right-section\">\n          <h2>{name}</h2>\n          <span>{jobTitle}</span>\n        </div>\n        <div className=\"action-buttons\">\n          <Button\n            type=\"primary\"\n            href={getWhatsAppUrl(whatsappNumber, name)}\n            target=\"_blank\"\n          >\n            <FaWhatsapp className=\"whatsapp-icon\" />\n            &nbsp;Connect\n          </Button>\n        </div>\n      </section>\n      <section className=\"tags-section\">\n        {skills?.map((itm: string) => (\n          <span className=\"tags\" key={itm}>\n            {itm}\n          </span>\n        ))}\n      </section>\n      <section className=\"footer-section\">\n        <div>\n          <MdLocationOn style={iconStyles} />\n          {location}\n        </div>\n        <div title={`${ctc} lacs per annum`}>\n          <MdMonetizationOn style={iconStyles} />\n          {ctc} LPA\n        </div>\n        <div>\n          <MdHistory style={iconStyles} />\n          {exp} year\n        </div>\n        <div>\n          <FaGithub style={iconStyles} />\n          <a\n            href={generateGithubUrl(githubUrl)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Github\n          </a>\n        </div>\n      </section>\n      <About title=\"About\">{about}</About>\n      <br />\n      {gitInfo && Object.keys(gitInfo)?.length > 0 && (\n        <Card>\n          <div className=\"profile-footer\">\n            <SkillSection gitInfo={gitInfo} />\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  searchType: state.searchType,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchCandidateDetails,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecruiterSearchDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Card, Col, Avatar, Empty } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\n\nimport RecruiterSearchDetails from \"./components/RecruiterSearchDetails\";\nimport { JobObjectTypes, StateTypes } from \"../../../redux\";\nimport { iconStyles } from \"../../../utils\";\nimport \"./RecruiterSearchResult.scss\";\n\nconst SingleWidget: React.FC<any> = (props) => {\n  const { itm, setSelectedData, selectedData } = props;\n  const { jobTitle, skills, location, ctc, exp, name } = itm;\n\n  return (\n    <Card\n      hoverable\n      onClick={() => setSelectedData(itm)}\n      className={itm?.aboutid === selectedData?.aboutid ? \"active-card\" : \"\"}\n    >\n      <section className=\"each-widget\">\n        <Avatar size={55}>{name[0]}</Avatar>\n        <div className=\"right-section\">\n          <h3 title={name}>{name}</h3>\n          <span>{jobTitle}</span>\n        </div>\n      </section>\n      <section className=\"tags-section\">\n        {skills.map((itm: string) => (\n          <span key={itm} className=\"tags\">\n            {itm}\n          </span>\n        ))}\n      </section>\n      <section className=\"footer-section\">\n        <div>\n          <MdLocationOn style={iconStyles} />\n          {location}\n        </div>\n        <div title={`${ctc} lacs per annum`}>\n          <MdMonetizationOn style={iconStyles} />\n          {ctc} LPA\n        </div>\n        <div>\n          <MdHistory style={iconStyles} />\n          {exp} year\n        </div>\n      </section>\n    </Card>\n  );\n};\n\nconst SearchResults: React.FC<{ data: JobObjectTypes[] }> = (props) => {\n  const { data } = props;\n  const [selectedData, setSelectedData] = useState({});\n\n  useEffect(() => {\n    setSelectedData(data[0]);\n  }, [data]);\n\n  return (\n    <div className=\"search__results\">\n      {data.length ? (\n        <Row>\n          <Col\n            span={8}\n            xs={{ span: 12 }}\n            sm={{ span: 10 }}\n            md={{ span: 8 }}\n            lg={{ span: 6 }}\n          >\n            <div className=\"search-result-widget-container\">\n              {data?.map((itm: any, index: number) => (\n                <SingleWidget\n                  key={itm.aboutid}\n                  itm={itm}\n                  index={index}\n                  selectedData={selectedData}\n                  setSelectedData={setSelectedData}\n                />\n              ))}\n            </div>\n          </Col>\n          <Col\n            span={16}\n            xs={{ span: 12 }}\n            sm={{ span: 14 }}\n            md={{ span: 16 }}\n            lg={{ span: 18 }}\n          >\n            {selectedData && Object.keys(selectedData).length > 0 ? (\n              <RecruiterSearchDetails {...{ ...selectedData }} />\n            ) : (\n              <Empty />\n            )}\n          </Col>\n        </Row>\n      ) : (\n        <div className=\"search__results__empty\">\n          <br />\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport RecruiterSearchResults from \"./RecruiterSearchResults\";\nimport {\n  StateTypes,\n  SearchType,\n  fetchRecommendedCandidates,\n} from \"../../../redux\";\nimport \"./RecruiterSearch.scss\";\n\nconst RecruiterSearch: React.FC<any> = (props) => {\n  const {\n    skillSearch,\n    searchType,\n    recommendedCandidates,\n    fetchRecommendedCandidates,\n  } = props;\n\n  const returnData = (type: SearchType) => {\n    switch (type) {\n      case \"skillSearch\":\n        return skillSearch;\n      case \"recommended\":\n        return recommendedCandidates;\n      default:\n        return recommendedCandidates;\n    }\n  };\n\n  useEffect(() => {\n    if (searchType === \"recommended\") {\n      if (recommendedCandidates.length === 0) fetchRecommendedCandidates();\n    }\n  }, [searchType]);\n\n  return (\n    <div className=\"search\">\n      {searchType === \"recommended\" && (\n        <div className=\"search__heading\">\n          <h2>Recommended Candidates</h2>\n        </div>\n      )}\n      {searchType === \"skillSearch\" && (\n        <div className=\"search__heading\">\n          <h2>Results based on Skills</h2>\n        </div>\n      )}\n      <RecruiterSearchResults data={returnData(searchType)} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  skillSearch: state.skillSearch,\n  recommendedCandidates: state.recommendedCandidates,\n  searchType: state.searchType,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchRecommendedCandidates,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterSearch);\n"],"names":["props","gitInfo","repoCount","skills","skillsOrder","className","map","itm","index","percent","showInfo","strokeColor","Boolean","connect","state","searchType","dispatch","bindActionCreators","fetchCandidateDetails","aboutid","ctc","exp","githubUrl","jobTitle","location","name","whatsappNumber","about","useEffect","type","href","getWhatsAppUrl","target","style","iconStyles","title","generateGithubUrl","rel","About","Object","keys","length","SkillSection","SingleWidget","setSelectedData","selectedData","hoverable","onClick","size","data","useState","span","xs","sm","md","lg","skillSearch","recommendedCandidates","fetchRecommendedCandidates","RecruiterSearchResults"],"sourceRoot":""}