{"version":3,"file":"static/js/954.31612a4f.chunk.js","mappings":"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","sources":["pages/Onboarding/RecruiterOnboarding.tsx","redux/actions.ts","utils/makeRequest.ts"],"sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, Select, InputNumber } from \"antd\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nimport { industryTypes } from \"../../utils\";\nimport { saveRecruiterData, StateTypes } from \"../../redux\";\nimport { RecruitereSubmitTypes, RecruiterOnboardingPropTypes } from \"./types\";\nimport \"./onboarding.scss\";\n\nconst { Option } = Select;\n\nconst RecruiterOnboarding: React.FC<RecruiterOnboardingPropTypes> = (props) => {\n  const { saveRecruiterData, skills, cities } = props;\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  const onFinish = (values: RecruitereSubmitTypes) => {\n    const tempValues = Object.assign({}, values);\n    const skillsString = Object.assign([], tempValues.skills);\n    tempValues.skills = skillsString.join(\",\");\n    saveRecruiterData(tempValues, afterSuccessfullFinish);\n  };\n\n  const afterSuccessfullFinish = () => {\n    navigate(\"/home\");\n    form.resetFields();\n  };\n\n  return (\n    <div className=\"onboarding\">\n      <h2>Create your Recruiter profile</h2>\n      <Form\n        form={form}\n        name=\"Recruiter onboarding\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 12 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Company/Name\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please enter the company name!\" },\n          ]}\n        >\n          <Input placeholder=\"Please enter the company name\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Industry\"\n          name=\"preferredIndustry\"\n          rules={[\n            { required: true, message: \"Please enter the company name!\" },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"Select your current industry type\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option: any) =>\n              option?.children.toLowerCase().includes(input.toLowerCase())\n            }\n          >\n            {industryTypes.map((itm: string) => (\n              <Option value={itm} key={itm}>\n                {itm}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Location\"\n          name=\"location\"\n          rules={[{ required: true, message: \"Please select a location!\" }]}\n        >\n          <Select\n            showSearch\n            placeholder=\"Please select your current location\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option: any) =>\n              option?.children.toLowerCase().includes(input.toLowerCase())\n            }\n          >\n            {cities.map((itm: string) => (\n              <Option value={itm} key={itm}>\n                {itm}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Whatsapp number\"\n          name=\"whatsappNumber\"\n          rules={[\n            {\n              required: true,\n              message: \"Please add a valid whatsapp number!\",\n              validator(_, value) {\n                if (value && value.length === 10) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\"Please enter a valid whatsapp number!\")\n                );\n              },\n            },\n          ]}\n        >\n          <Input placeholder=\"Please add your whatsapp number\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Number of employees\"\n          name=\"empSize\"\n          rules={[\n            {\n              required: true,\n              message: \"Please enter valid number of employees!\",\n              type: \"number\",\n            },\n          ]}\n        >\n          <InputNumber placeholder=\"e.g 100\" min={1} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Skills you are looking for\"\n          name=\"skills\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select atleast three skills!\",\n              validator(_, value) {\n                if (value && value.length >= 3) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(\"Please select atleast three skills!\")\n                );\n              },\n            },\n          ]}\n        >\n          <Select\n            mode=\"multiple\"\n            allowClear\n            placeholder=\"Please select atleast three skills\"\n          >\n            {skills.map((itm: string) => (\n              <Option value={itm} key={itm}>\n                {itm}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"About\"\n          name=\"about\"\n          rules={[\n            { required: true, message: \"Please enter a brief introduction!\" },\n          ]}\n        >\n          <Input.TextArea placeholder=\"about\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Website\"\n          name=\"site\"\n          rules={[\n            {\n              required: false,\n              message: \"Please enter a valid url!\",\n              type: \"url\",\n            },\n          ]}\n        >\n          <Input placeholder=\"website\" />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 8, span: 12 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit details\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  skills: state.skills,\n  cities: state.cities,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      saveRecruiterData,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecruiterOnboarding);\n","import { notification } from \"antd\";\nimport {\n  CandidateSubmitTypes,\n  RecruitereSubmitTypes,\n} from \"../pages/Onboarding/types\";\nimport { UserTypeTypes } from \"../routes\";\nimport makeRequest from \"../utils/makeRequest\";\nimport { unionArray } from \"../utils\";\nimport { DispatchType } from \"./types\";\nimport { SearchType, StateTypes, store } from \".\";\n\nexport const setIsAuth = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: data,\n    });\n  };\n};\n\nexport const setLoading = (value: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_LOADING\",\n      payload: value,\n    });\n  };\n};\n\nexport const setUserType = (userType: UserTypeTypes) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_USER_TYPE\",\n      payload: userType,\n    });\n  };\n};\n\nexport const setActiveJobModalVisible = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_ACTIVE_JOB_MODAL_VISIBLE\",\n      payload: data,\n    });\n  };\n};\n\n// fetch candidate profile details\nexport const fetchCanProfile = () => {\n  return async (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    try {\n      const { data } = await makeRequest.get(\"/api/user-can/user\");\n      dispatch({\n        type: \"SET_PROFILE_DETAIL\",\n        payload: data.user,\n      });\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    } catch (e) {\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    }\n  };\n};\n\n// fetch recriter profile details\nexport const fetchRecProfile = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/user-rec/user\")\n      .then((data) => {\n        dispatch({\n          type: \"SET_PROFILE_DETAIL\",\n          payload: data.user,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveCandidateData = (\n  values: CandidateSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-can/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveRecruiterData = (\n  values: RecruitereSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-rec/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const createJobPost = (values: RecruitereSubmitTypes, callback: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/jobs/job\", values)\n      .then((data) => {\n        dispatch({\n          type: \"ADD_JOB_POST\",\n          payload: data?.jobDetail?.jobUploaded,\n        });\n        notification.success({\n          message: \"Job posted successfully\",\n          description:\n            \"Please visit the recent jobs posted section to get updates!\",\n        });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchPostedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/jobs/job\")\n      .then((data) => {\n        dispatch({ type: \"SET_POSTED_JOBS\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data.jobRecord,\n            \"jobslug\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const applyForJob = (id: string, callback?: () => void) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(`/api/user-can/apply`, { jobid: id })\n      .then((data) => {\n        if (data?.success) {\n          dispatch({ type: \"SET_LOADING\", payload: false });\n          callback && callback();\n          notification.success({\n            message: \"Hurray!, applied successfully\",\n          });\n        } else if (data?.message) {\n          notification.error({\n            message: \"Already applied!\",\n          });\n          dispatch({ type: \"SET_LOADING\", payload: false });\n        }\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const getJobDetails = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchTrendingJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/trend`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecommendedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/reco`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchJobDetail = (id: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${id}`)\n      .then((data) => {\n        dispatch({ type: \"SET_ACTIVE_JOB\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchRecommendedCandidates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcans`)\n      .then((data) => {\n        dispatch({ type: \"SET_RECOMMENDED_CANDIDATES\", payload: data.user });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const setRecruiterCandidateDetails = (values: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_RECRUITER_CANDIDATE_DETAILS\", payload: values });\n  };\n};\n\nexport const setSearchType = (searchType: SearchType) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_SEARCH_TYPE\", payload: searchType });\n  };\n};\n\nexport const fetchCompanySearchData = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_COMPANY_SEARCH\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchAppliedCandidates = (jobslug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/applied?jobid=${jobslug}`)\n      .then((data) => {\n        if (data?.enrolledCandidate) {\n          dispatch({\n            type: \"SET_APPLIED_CANDIDATES\",\n            payload: unionArray(\n              store.getState().appliedCandidates,\n              data.enrolledCandidate,\n              \"userId\"\n            ),\n          });\n        } else {\n          dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchCandidateDetails = (aboutId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${aboutId}`)\n      .then((data) => {\n        if (data?.user?.about) {\n          const tempStore: StateTypes = store.getState();\n          const type = tempStore.searchType;\n          let tempObect = [];\n          switch (type) {\n            case \"recommended\":\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                  dispatch({\n                    type: \"SET_RECRUITER_CANDIDATE_DETAILS\",\n                    payload: itm,\n                  });\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n            case \"skillSearch\":\n              tempObect = tempStore.skillSearch.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n              break;\n            default:\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n          }\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecruiterSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/search-can?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data?.user,\n            \"aboutid\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchCities = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/cities\")\n      .then((data) => {\n        dispatch({ type: \"SET_CITIES\", payload: data?.cities });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkills = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/skills\")\n      .then((data) => {\n        dispatch({ type: \"SET_SKILLS\", payload: data?.skills });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const clearStates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"CLEAR_STATE\", payload: {} });\n  };\n};\n\nexport const fetchAppliedCandidateDetail = (userId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${userId}`)\n      .then((data) => {\n        const tempAppliedCandidates = store\n          .getState()\n          .appliedCandidates.map((itm: any) => {\n            if (itm?.userId === userId) {\n              itm = { ...itm, ...data.user };\n            }\n            return itm;\n          });\n        dispatch({\n          type: \"SET_APPLIED_CANDIDATES\",\n          payload: tempAppliedCandidates,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSearchJobDetail = (jobSlug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${jobSlug}`)\n      .then((data: any) => {\n        const tempStore: StateTypes = store.getState();\n        const type = tempStore.searchType;\n        let tempObect = [];\n        switch (type) {\n          case \"companySearch\":\n            tempObect = tempStore.companySearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_COMPANY_SEARCH\", payload: tempObect });\n            break;\n          case \"skillSearch\":\n            tempObect = tempStore.skillSearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n            break;\n          case \"recommended\":\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n          case \"trending\":\n            tempObect = tempStore.trendingJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_TRENDING_JOBS\", payload: tempObect });\n            break;\n          default:\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n","const baseUrl = \"http://localhost:3005\";\n// const baseUrl = \"http://3.131.169.145\";\n// const baseUrl = \"http://geekinsider.in\";\n\n// if (process.env.NODE_ENV === \"production\") {\n//   baseUrl = process.env.BASE_URL;\n// }\n\nconst getHeader = () => {\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  };\n};\n\nexport default {\n  async auth(URL: string, values: any) {\n    return fetch(`${baseUrl}/api/auth/${URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n  async get(URL: string) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"GET\",\n      headers: getHeader(),\n    }).then((response) => response.json());\n  },\n\n  async post(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"POST\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async put(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"PUT\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async delete(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"DELETE\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n};\n"],"names":["Option","Select","connect","state","skills","cities","dispatch","bindActionCreators","saveRecruiterData","props","Form","form","navigate","useNavigate","afterSuccessfullFinish","resetFields","className","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","tempValues","Object","assign","skillsString","join","label","rules","required","message","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","industryTypes","itm","value","map","validator","_","length","Promise","resolve","reject","Error","type","min","mode","allowClear","offset","htmlType","setIsAuth","data","payload","setLoading","setUserType","userType","fetchCanProfile","makeRequest","user","fetchRecProfile","then","catch","saveCandidateData","callback","createJobPost","jobDetail","jobUploaded","notification","description","fetchPostedJobs","jobRecord","fetchSkillSearch","unionArray","store","skillSearch","applyForJob","id","jobid","success","getJobDetails","cname","fetchTrendingJobs","fetchRecommendedJobs","fetchJobDetail","fetchRecommendedCandidates","setRecruiterCandidateDetails","setSearchType","searchType","fetchCompanySearchData","fetchAppliedCandidates","jobslug","enrolledCandidate","appliedCandidates","fetchCandidateDetails","aboutId","about","tempStore","tempObect","recommendedCandidates","aboutid","fetchRecruiterSkillSearch","fetchCities","fetchSkills","clearStates","fetchAppliedCandidateDetail","userId","tempAppliedCandidates","fetchSearchJobDetail","jobSlug","companySearch","recommendedJobs","trendingJobs","baseUrl","getHeader","Authorization","localStorage","getItem","auth","URL","fetch","method","headers","body","JSON","stringify","response","json","get","post","put","delete"],"sourceRoot":""}