{"version":3,"file":"static/js/482.53f31db3.chunk.js","mappings":"2TAsDA,EA9CgD,SAACA,GAC/C,IAAQC,EACND,EADMC,SAAUC,EAChBF,EADgBE,OAAQC,EACxBH,EADwBG,YAAaC,EACrCJ,EADqCI,IAAKC,EAC1CL,EAD0CK,IAAKC,EAC/CN,EAD+CM,YAAaC,EAC5DP,EAD4DO,QAExDC,EACc,kBAAXN,EAAsBA,EAAOO,MAAM,KAAOP,EAEnD,OACE,gBAAKQ,UAAU,gBAAe,UAC5B,UAAC,IAAI,CAACC,WAAS,EAACC,QAAS,kBAAW,OAALZ,QAAK,IAALA,OAAK,EAALA,EAAOY,QAAQL,EAAQ,EAAC,WACrD,qBAASG,UAAU,6BAA4B,WAC7C,SAAC,IAAM,CAACG,KAAM,GAAG,SAAEZ,EAAS,MAC5B,iBAAKS,UAAU,gBAAe,WAC5B,0BAAOJ,KACP,eAAIQ,MAAOb,EAAS,SAAEA,WAG1B,oBAASS,UAAU,6BAA4B,SAC5CF,EAAeO,KAAI,SAACC,GAAW,OAC9B,iBAAMN,UAAU,OAAM,SACnBM,GADyBA,EAErB,OAGX,qBAASN,UAAU,gCAA+B,WAChD,4BACE,SAAC,MAAY,CAACO,MAAOC,EAAAA,KACpBf,MAEH,4BACE,SAAC,MAAgB,CACfc,MAAOC,EAAAA,GACPJ,MAAK,UAAKT,EAAG,qBAEdA,EAAI,WAEP,4BACE,SAAC,MAAS,CAACY,MAAOC,EAAAA,KACjBd,EAAI,kBAOjB,E,UCqBA,GAAee,EAAAA,EAAAA,KAZS,SAACC,GAAiB,MAAM,CAC9CC,gBAAiBD,EAAMC,gBACxB,IAE0B,SAACC,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEC,qBAAAA,EAAAA,IAEFF,EACA,GAEJ,EA1DwE,SACtEtB,GAEA,IAAQqB,EAA0CrB,EAA1CqB,gBAAiBG,EAAyBxB,EAAzBwB,qBACnBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACuB,IAA3BN,EAAgBO,QAAcJ,GACpC,GAAG,IAEH,IAAMK,EAAkB,SAACtB,GACvBkB,EAAS,eAAD,OAAgBlB,GAC1B,EAEA,OACE,iBAAKG,UAAU,yBAAwB,WACrC,wBAAI,8BACJ,gBAAKA,UAAU,mCAAkC,SAC9CW,EAAgBO,OAAS,EACxBP,EACGS,MAAM,EAAG,GACTf,KAAI,SAACC,GAAQ,OACZ,SAAC,GAAS,6BAECA,GAAG,IAAEJ,QAASiB,KADlBb,EAAIT,QAET,KAGN,gBAAKG,UAAU,gCAA+B,UAC5C,SAAC,IAAK,QAIXW,EAAgBO,OAAS,GACxB,gBAAKlB,UAAU,qBAAoB,UACjC,SAAC,IAAM,CAACE,QAAS,kBAAMa,EAAS,wBAAwB,EAAC,SAAC,mBAK5D,oBAIR,ICnCA,EAnB4D,SAACzB,GAC3D,IAAQc,EAA6Bd,EAA7Bc,MAAOiB,EAAsB/B,EAAtB+B,SAAUnB,EAAYZ,EAAZY,QACzB,OACE,gBAAKF,UAAU,gBAAgBE,QAASA,EAAQ,UAC9C,UAAC,IAAI,CAACD,WAAS,aACb,gBAAKD,UAAU,wBAAuB,UACpC,SAAC,IAAM,CAACG,KAAM,GAAG,SAAEC,EAAQA,EAAM,GAAK,QAExC,iBAAKJ,UAAU,yBAAwB,WACrC,yBACE,mBAAQI,MAAOA,EAAM,SAAEA,OAEzB,uBAAIiB,WAKd,ECwDA,GAAeZ,EAAAA,EAAAA,KAbS,SAACC,GAAiB,MAAM,CAC9CY,aAAcZ,EAAMY,aACrB,IAE0B,SAACV,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEU,kBAAAA,EAAAA,GACAC,eAAAA,EAAAA,IAEFZ,EACA,GAEJ,EA9DsD,SAACtB,GACrD,IAAQgC,EAAoChC,EAApCgC,aAAcC,EAAsBjC,EAAtBiC,kBAChBR,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACoB,IAAxBK,EAAaJ,QAAcK,GACjC,GAAG,IAEH,IAAMJ,EAAkB,SAACtB,GACvBkB,EAAS,eAAD,OAAgBlB,GAC1B,EAEA,OACE,iBAAKG,UAAU,yBAAwB,WACrC,wBAAI,uBACJ,gBAAKA,UAAU,mCAAkC,SAC9CsB,EAAaJ,OAAS,EACrBI,EACGF,MAAM,EAAG,GACTf,KAAI,SAACC,GAAQ,OACZ,SAAC,GAAS,6BAECA,GAAG,IAAEJ,QAASiB,KADlBb,EAAIT,QAET,KAGN,gBAAKG,UAAU,gCAA+B,UAC5C,SAAC,IAAK,QAIXsB,EAAaJ,OAAS,GACrB,gBAAKlB,UAAU,qBAAoB,UACjC,SAAC,IAAM,CACLE,QAAS,WACPa,EAAS,uBACTU,EAAAA,EAAAA,IAAc,WAChB,EAAE,SACH,mBAKH,oBAIR,ICdA,GAAehB,EAAAA,EAAAA,KAZS,SAACC,GAAiB,MAAM,CAC9CgB,eAAgBhB,EAAMgB,eACvB,IAE0B,SAACd,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEc,gBAAAA,EAAAA,IAEFf,EACA,GAEJ,EAtCsE,SACpEtB,GAEA,IAAQsC,EAAwDtC,EAAxDsC,mBAAoBD,EAAoCrC,EAApCqC,gBAAiBD,EAAmBpC,EAAnBoC,eAM7C,OAJAT,EAAAA,EAAAA,YAAU,WACmC,IAAvCY,OAAOC,KAAKJ,GAAgBR,QAAcS,GAChD,GAAG,KAGD,iBAAK3B,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,0BAAyB,UACtC,SAAC,EAAkB,CACjBE,QAAS0B,EACTxB,MAAOsB,EAAeK,KACtBV,SAAUK,EAAenC,cAG7B,iBAAKS,UAAU,2BAA0B,WACvC,SAAC,EAAqB,KACtB,SAAC,EAAW,SAIpB,ICrBMgC,EAA4C,SAAC1C,GACjD,IAAQE,EAAwCF,EAAxCE,OAAQD,EAAgCD,EAAhCC,SAAUwC,EAAsBzC,EAAtByC,KAAME,EAAgB3C,EAAhB2C,YAEhC,OACE,UAAC,IAAI,CACHhC,WAAS,EACTC,QAAS,kBAAM+B,EAAY3C,EAAM,EACjCU,UAAU,sCAAqC,WAE/C,qBAASA,UAAU,cAAa,WAC9B,SAAC,IAAM,CAACG,KAAM,GAAG,SAAE4B,EAAK,MACxB,iBAAK/B,UAAU,gBAAe,WAC5B,wBAAK+B,KACL,0BAAOxC,WAGX,gBAAKS,UAAU,cAAa,SACzBR,EAAOa,KAAI,SAACC,GAAW,OACtB,iBAAMN,UAAU,OAAM,SACnBM,GADyBA,EAErB,QAKjB,EA+DA,GAAeG,EAAAA,EAAAA,KAbS,SAACC,GAAiB,MAAM,CAC9CwB,sBAAuBxB,EAAMwB,sBAC9B,IAE0B,SAACtB,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEsB,2BAAAA,EAAAA,GACAC,6BAAAA,EAAAA,IAEFxB,EACA,GAEJ,EA3DI,SAACtB,GACH,IACE4C,EAGE5C,EAHF4C,sBACAC,EAEE7C,EAFF6C,2BACAC,EACE9C,EADF8C,6BAEIrB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAC6B,IAAjCiB,EAAsBhB,QAAciB,GAC1C,GAAG,IAEH,IAAMF,EAAc,SAACI,GACnBD,EAA6BC,GAC7BtB,EAAS,0BAAD,OAA2BsB,EAAOC,SAC5C,EAMA,OACE,iBAAKtC,UAAU,gCAA+B,WAC5C,wBAAI,2BACHkC,EAAsBhB,QACrB,iCACE,gBAAKlB,UAAU,0CAAyC,SACrDkC,EAAsBd,MAAM,EAAG,GAAGf,KAAI,SAACC,GAAQ,OAC9C,SAAC0B,GAAY,6BAAoB1B,GAAG,IAAE2B,YAAAA,KAAnB3B,EAAoC,MAG1D4B,EAAsBhB,OAAS,IAC9B,gBAAKlB,UAAU,qBAAoB,UACjC,SAAC,IAAM,CAACE,QAhBE,WACpBa,EAAS,oBACX,EAc2C,SAAC,sBAKtC,0BACE,SAAC,IAAK,QAKhB,I,oBCPA,GAAeN,EAAAA,EAAAA,KAbS,SAACC,GAAiB,MAAM,CAC9C6B,WAAY7B,EAAM6B,WACnB,IAE0B,SAAC3B,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACE2B,gBAAAA,EAAAA,GACAhB,eAAAA,EAAAA,IAEFZ,EACA,GAEJ,EApEwE,SACtEtB,GAEA,IAAQiD,EAAgCjD,EAAhCiD,WAAYC,EAAoBlD,EAApBkD,gBACdzB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACkB,IAAtBsB,EAAWrB,QAAcsB,GAC/B,GAAG,IAEH,IAAMC,EAAqB,SAACC,GAC1B3B,EAAS,mBAAD,OAAoB2B,GAC9B,EAEA,OACE,iCACE,iBAAK1C,UAAU,cAAa,WAC1B,wBAAI,uBACHuC,EAAWrB,OAAS,GACnB,gBAAKlB,UAAU,yBAAwB,SACpCuC,EAAWlC,KAAI,SAACC,GAAQ,OACvB,SAAC,GAAS,6BAECA,GAAG,IAAEJ,QAASuC,KADlBE,KAAKC,UAAUtC,GAEpB,OAIN,iBAAKN,UAAU,mCAAkC,WAC/C,SAAC,IAAK,CAAC6C,YAAY,iDACnB,UAAC,IAAM,CACL3C,QAAS,kBAAMa,EAAS,qBAAqB,EAC7C+B,KAAK,UAAS,WAEd,SAAC,MAAM,CAAC9C,UAAU,SAAS,2BAMnC,gBAAKA,UAAU,sBAAqB,UAClC,SAAC,IAAO,CAACI,MAAM,aAAY,UACzB,SAAC,IAAM,CACL2C,MAAM,SACN7C,QAAS,kBAAMa,EAAS,qBAAqB,EAC7C+B,KAAK,UAAS,UAEd,SAAC,MAAM,CAAC9C,UAAU,iBAM9B,ICjBA,GAAeS,EAAAA,EAAAA,KAZS,SAACC,GAAiB,MAAM,CAC9CgB,eAAgBhB,EAAMgB,eACvB,IAE0B,SAACd,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEmC,gBAAAA,EAAAA,IAEFpC,EACA,GAEJ,EApC8D,SAACtB,GAC7D,IAAQ0D,EAAwD1D,EAAxD0D,gBAAiBpB,EAAuCtC,EAAvCsC,mBAAoBF,EAAmBpC,EAAnBoC,eAM7C,OAJAT,EAAAA,EAAAA,YAAU,WACmC,IAAvCY,OAAOC,KAAKJ,GAAgBR,QAAc8B,GAChD,GAAG,KAGD,iBAAKhD,UAAU,oBAAmB,WAChC,iBAAKA,UAAU,0BAAyB,WACtC,SAAC,EAAkB,CACjBE,QAAS0B,EACTxB,MAAOsB,EAAeK,KACtBV,SAAUK,EAAeuB,YAE3B,SAAC,EAA4B,QAE/B,gBAAKjD,UAAU,2BAA0B,UACvC,SAACkD,EAAU,QAInB,I,UC2BA,GAAezC,EAAAA,EAAAA,KAbS,SAACC,GAAiB,MAAM,CAC9CyC,SAAUzC,EAAMyC,SAChBC,QAAS1C,EAAM0C,QAChB,IAE0B,SAACxC,GAAa,OACvCC,EAAAA,EAAAA,IACE,CACEwC,YAAAA,EAAAA,IAEFzC,EACA,GAEJ,EAhDoD,SAACtB,GACnD,IAAQ6D,EAAmC7D,EAAnC6D,SAAUE,EAAyB/D,EAAzB+D,YAAaD,EAAY9D,EAAZ8D,QACzBrC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAIqC,EAAAA,EAAAA,MAAmB,CACrB,IACMR,EAAqB,mBADVS,EAAAA,EAAAA,MAATC,KACUC,KAA2B,YAAc,YAC3DJ,EAAYP,EACd,MACE/B,EAAS,SAEb,GAAG,IAEH,IAAMa,EAAkB,yCAAG,gGACR2B,EAAAA,EAAAA,MAATC,EAAI,EAAJA,KACFV,EAAqB,kBAAdU,EAAKC,KAA2B,YAAc,YAC3DJ,EAAYP,GACZ/B,EAAS,IAAD,OAAK+B,EAAI,aAAY,2CAC9B,kBALuB,mCAkBxB,OAAO,gBAAK9C,UAAU,yBAAwB,SAXzB,SAACwD,GACpB,OAAQA,GACN,IAAK,YACH,OAAO,SAACE,EAAgB,CAAO9B,mBAAAA,IACjC,IAAK,YACH,OAAO,SAAC,EAAgB,CAAOA,mBAAAA,IACjC,QACE,OAAOwB,GAAU,oBAAU,SAACO,EAAA,EAAM,IAExC,CAEgDC,CAAaT,IAC/D,G,iwBCnCaU,EAAY,SAACC,GACxB,OAAO,SAAClD,GACNA,EAAS,CACPkC,KAAM,WACNiB,QAASD,GAEb,CACF,EAEaE,EAAa,SAACC,GACzB,OAAO,SAACrD,GACNA,EAAS,CACPkC,KAAM,cACNiB,QAASE,GAEb,CACF,EAEaZ,EAAc,SAACF,GAC1B,OAAO,SAACvC,GACNA,EAAS,CACPkC,KAAM,gBACNiB,QAASZ,GAEb,CACF,EAYaxB,EAAkB,WAC7B,gDAAO,WAAOf,GAAsB,8EACe,OAAjDA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IAAQ,kBAExBG,EAAAA,EAAAA,IAAgB,sBAAsB,KAAD,WAApDJ,EAAI,EAAJA,KACRlD,EAAS,CACPkC,KAAM,qBACNiB,QAASD,EAAKN,OAEhB5C,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IAAS,kDAElDnD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IAAS,0DAErD,mDAZD,EAaF,EAGaf,EAAkB,WAC7B,OAAO,SAACpC,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,sBACJC,MAAK,SAACL,GACLlD,EAAS,CACPkC,KAAM,qBACNiB,QAASD,EAAKN,OAEhB5C,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaM,EAAoB,SAC/BhC,EACAiC,GAEA,OAAO,SAAC1D,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,KACQ,qBAAsB7B,GAC3B8B,MAAK,WACJvD,EAAS,CAAEkC,KAAM,qBAAsBiB,QAAS1B,IAChDiC,IACA1D,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaQ,EAAoB,SAC/BlC,EACAiC,GAEA,OAAO,SAAC1D,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,KACQ,qBAAsB7B,GAC3B8B,MAAK,WACJvD,EAAS,CAAEkC,KAAM,qBAAsBiB,QAAS1B,IAChDiC,IACA1D,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaS,EAAgB,SAACnC,EAA+BiC,GAC3D,OAAO,SAAC1D,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,KACQ,gBAAiB7B,GACtB8B,MAAK,SAACL,GAAU,IAAD,EACdlD,EAAS,CACPkC,KAAM,eACNiB,QAAa,OAAJD,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAMW,iBAAS,WAAX,EAAJ,EAAiBC,cAE5BC,EAAAA,EAAAA,QAAqB,CACnBC,QAAS,0BACT/B,YACE,gEAEJyB,IACA1D,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEavB,EAAkB,WAC7B,OAAO,SAAC5B,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,iBACJC,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,kBAAmBiB,QAASD,EAAKe,YAClDjE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEae,EAAmB,SAACtF,GAC/B,OAAO,SAACoB,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,wBAAD,OAAyB1E,EAAOuF,KAAK,OACxCZ,MAAK,SAACL,GACLlD,EAAS,CACPkC,KAAM,0BACNiB,SAASiB,EAAAA,EAAAA,GACPC,EAAAA,EAAAA,WAAiBC,YACjBpB,EAAKe,UACL,aAGJjE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaoB,EAAc,SAACC,EAAYd,GACtC,OAAO,SAAC1D,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,KACQ,sBAAuB,CAAEmB,MAAOD,IACrCjB,MAAK,SAACL,GACG,OAAJA,QAAI,IAAJA,GAAAA,EAAMwB,SACR1E,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCO,GAAYA,IACZK,EAAAA,EAAAA,QAAqB,CACnBC,QAAS,mCAEE,OAAJd,QAAI,IAAJA,GAAAA,EAAMc,UACfD,EAAAA,EAAAA,MAAmB,CACjBC,QAAS,qBAEXhE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IAE7C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEawB,EAAgB,SAACC,GAC5B,OAAO,SAAC5E,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,uBAAD,OAAwBsB,IAC3BrB,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,0BAA2BiB,QAASD,EAAKe,YAC1DjE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaxC,EAAoB,WAC/B,OAAO,SAACX,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,mBACJC,MAAK,SAACL,GACG,OAAJA,QAAI,IAAJA,GAAAA,EAAMe,UACRjE,EAAS,CAAEkC,KAAM,oBAAqBiB,QAASD,EAAKe,YAEpDjE,EAAS,CAAEkC,KAAM,oBAAqBiB,QAAS,KAEjDnD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCnD,EAAS,CAAEkC,KAAM,oBAAqBiB,QAAS,IACjD,GACJ,CACF,EAEajD,EAAuB,WAClC,OAAO,SAACF,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,kBACJC,MAAK,SAACL,GACG,OAAJA,QAAI,IAAJA,GAAAA,EAAMe,UACRjE,EAAS,CAAEkC,KAAM,uBAAwBiB,QAASD,EAAKe,YAEvDjE,EAAS,CAAEkC,KAAM,uBAAwBiB,QAAS,KAEpDnD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCnD,EAAS,CAAEkC,KAAM,uBAAwBiB,QAAS,IACpD,GACJ,CACF,EAEavC,EAAiB,SAAC4D,GAC7B,OAAO,SAACxE,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,6BAAD,OAA8BkB,IACjCjB,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,iBAAkBiB,QAASD,EAAKe,YACjDjE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEa5B,EAA6B,WACxC,OAAO,SAACvB,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,yBACJC,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,6BAA8BiB,QAASD,EAAKN,OAC7D5C,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEa3B,EAA+B,SAACC,GAC3C,OAAO,SAACzB,GACNA,EAAS,CAAEkC,KAAM,kCAAmCiB,QAAS1B,GAC/D,CACF,EAEaZ,EAAgB,SAACgE,GAC5B,OAAO,SAAC7E,GACNA,EAAS,CAAEkC,KAAM,kBAAmBiB,QAAS0B,GAC/C,CACF,EAEaC,EAAyB,SAACF,GACrC,OAAO,SAAC5E,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,uBAAD,OAAwBsB,IAC3BrB,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,qBAAsBiB,QAASD,EAAKe,YACrDjE,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEa4B,EAAyB,SAAC9F,GACrC,OAAO,SAACe,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,+BAAD,OAAgCrE,IACnCsE,MAAK,SAACL,GACG,OAAJA,QAAI,IAAJA,GAAAA,EAAM8B,kBACRhF,EAAS,CACPkC,KAAM,yBACNiB,SAASiB,EAAAA,EAAAA,GACPC,EAAAA,EAAAA,WAAiBY,kBACjB/B,EAAK8B,kBACL,YAIJhF,EAAS,CAAEkC,KAAM,yBAA0BiB,QAAS,KAEtDnD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCnD,EAAS,CAAEkC,KAAM,yBAA0BiB,QAAS,IACtD,GACJ,CACF,EAEa+B,EAAwB,SAACC,GACpC,OAAO,SAACnF,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,8BAAD,OAA+B6B,IAClC5B,MAAK,SAACL,GAAU,IAAD,EACd,GAAQ,OAAJA,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMN,YAAI,OAAV,EAAYwC,MAAO,CACrB,IAAMC,EAAwBhB,EAAAA,EAAAA,WAE1BiB,EAAY,GAChB,OAFaD,EAAUR,YAGrB,IAAK,cACHS,EAAYD,EAAU/D,sBAAsB7B,KAAI,SAACC,GAAc,IAAD,EAQ5D,OAPO,QAAH,EAAAA,SAAG,aAAH,EAAKgC,WAAYyD,IACnBzF,GAAG,kBAAQA,GAAQwD,EAAKN,MACxB5C,EAAS,CACPkC,KAAM,kCACNiB,QAASzD,KAGNA,CACT,IACAM,EAAS,CACPkC,KAAM,6BACNiB,QAASmC,IAEX,MACF,IAAK,cACHA,EAAYD,EAAUf,YAAY7E,KAAI,SAACC,GAAc,IAAD,EAIlD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKgC,WAAYyD,IACnBzF,GAAG,kBAAQA,GAAQwD,EAAKN,OAEnBlD,CACT,IACAM,EAAS,CAAEkC,KAAM,0BAA2BiB,QAASmC,IACrD,MACF,QACEA,EAAYD,EAAU/D,sBAAsB7B,KAAI,SAACC,GAAc,IAAD,EAI5D,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKgC,WAAYyD,IACnBzF,GAAG,kBAAQA,GAAQwD,EAAKN,OAEnBlD,CACT,IACAM,EAAS,CACPkC,KAAM,6BACNiB,QAASmC,IAIjB,CACAtF,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCnD,EAAS,CAAEkC,KAAM,yBAA0BiB,QAAS,IACtD,GACJ,CACF,EAEaoC,EAA4B,SAAC3G,GACxC,OAAO,SAACoB,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,mCAAD,OAAoC1E,EAAOuF,KAAK,OACnDZ,MAAK,SAACL,GACLlD,EAAS,CACPkC,KAAM,0BACNiB,SAASiB,EAAAA,EAAAA,GACPC,EAAAA,EAAAA,WAAiBC,YACb,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMN,KACN,aAGJ5C,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEaqC,EAAc,WACzB,OAAO,SAACxF,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,qBACJC,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,aAAciB,QAAa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,SAC9CzF,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEauC,EAAc,WACzB,OAAO,SAAC1F,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,qBACJC,MAAK,SAACL,GACLlD,EAAS,CAAEkC,KAAM,aAAciB,QAAa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMtE,SAC9CoB,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEawC,EAAc,WACzB,OAAO,SAAC3F,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,QAAS,CAAC,GAC5C,CACF,EAEayC,EAA8B,SAACC,GAC1C,OAAO,SAAC7F,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,8BAAD,OAA+BuC,IAClCtC,MAAK,SAACL,GACL,IAAM4C,EAAwBzB,EAAAA,EAAAA,WAE3BY,kBAAkBxF,KAAI,SAACC,GAAc,IAAD,EAInC,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKmG,UAAWA,IAClBnG,GAAG,kBAAQA,GAAQwD,EAAKN,OAEnBlD,CACT,IACFM,EAAS,CACPkC,KAAM,yBACNiB,QAAS2C,IAEX9F,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,EAEa4C,EAAuB,SAACjE,GACnC,OAAO,SAAC9B,GACNA,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,IACzCG,EAAAA,EAAAA,IACO,6BAAD,OAA8BxB,IACjCyB,MAAK,SAACL,GACL,IAAMmC,EAAwBhB,EAAAA,EAAAA,WAE1BiB,EAAY,GAChB,OAFaD,EAAUR,YAGrB,IAAK,gBACHS,EAAYD,EAAUW,cAAcvG,KAAI,SAACC,GAAc,IAAD,EAIpD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKT,WAAY6C,IACnBpC,GAAG,kBAAQA,GAAQwD,EAAKe,YAEnBvE,CACT,IACAM,EAAS,CAAEkC,KAAM,qBAAsBiB,QAASmC,IAChD,MACF,IAAK,cACHA,EAAYD,EAAUf,YAAY7E,KAAI,SAACC,GAAc,IAAD,EAIlD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKT,WAAY6C,IACnBpC,GAAG,kBAAQA,GAAQwD,EAAKe,YAEnBvE,CACT,IACAM,EAAS,CAAEkC,KAAM,0BAA2BiB,QAASmC,IACrD,MACF,IAAK,cACHA,EAAYD,EAAUtF,gBAAgBN,KAAI,SAACC,GAAc,IAAD,EAItD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKT,WAAY6C,IACnBpC,GAAG,kBAAQA,GAAQwD,EAAKe,YAEnBvE,CACT,IACAM,EAAS,CAAEkC,KAAM,uBAAwBiB,QAASmC,IAClD,MACF,IAAK,WACHA,EAAYD,EAAU3E,aAAajB,KAAI,SAACC,GAAc,IAAD,EAInD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKT,WAAY6C,IACnBpC,GAAG,kBAAQA,GAAQwD,EAAKe,YAEnBvE,CACT,IACAM,EAAS,CAAEkC,KAAM,oBAAqBiB,QAASmC,IAC/C,MACF,QACEA,EAAYD,EAAUtF,gBAAgBN,KAAI,SAACC,GAAc,IAAD,EAItD,OAHO,QAAH,EAAAA,SAAG,aAAH,EAAKT,WAAY6C,IACnBpC,GAAG,kBAAQA,GAAQwD,EAAKe,YAEnBvE,CACT,IACAM,EAAS,CAAEkC,KAAM,uBAAwBiB,QAASmC,IAGtDtF,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,IACCK,OAAM,WACLxD,EAAS,CAAEkC,KAAM,cAAeiB,SAAS,GAC3C,GACJ,CACF,E,kECviBM8C,EAAU,wBAQVC,EAAY,WAChB,MAAO,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,iBAElD,EAEA,KACQC,KAAI,SAACC,EAAa9E,GAAc,OAAD,mIAC5B+E,MAAM,GAAD,OAAIP,EAAO,qBAAaM,GAAO,CACzCE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM5E,KAAKC,UAAUP,KACpB8B,MAAK,SAACqD,GAAQ,OAAKA,EAASC,MAAM,KAAC,0CAPH,EAQrC,EACMC,IAAG,SAACP,GAAc,OAAD,mIACdC,MAAM,GAAD,OAAIP,GAAO,OAAGM,GAAO,CAC/BE,OAAQ,MACRC,QAASR,MACR3C,MAAK,SAACqD,GAAQ,OAAKA,EAASC,MAAM,KAAC,0CAJjB,EAKvB,EAEME,KAAI,SAACR,EAAa9E,GAAc,OAAD,mIAC5B+E,MAAM,GAAD,OAAIP,GAAO,OAAGM,GAAO,CAC/BE,OAAQ,OACRC,QAASR,IACTS,KAAM5E,KAAKC,UAAUP,KACpB8B,MAAK,SAACqD,GAAQ,OAAKA,EAASC,MAAM,KAAC,0CALH,EAMrC,EAEMG,IAAG,SAACT,EAAa9E,GAAc,OAAD,mIAC3B+E,MAAM,GAAD,OAAIP,GAAO,OAAGM,GAAO,CAC/BE,OAAQ,MACRC,QAASR,IACTS,KAAM5E,KAAKC,UAAUP,KACpB8B,MAAK,SAACqD,GAAQ,OAAKA,EAASC,MAAM,KAAC,0CALJ,EAMpC,EAEMI,OAAM,SAACV,EAAa9E,GAAc,OAAD,mIAC9B+E,MAAM,GAAD,OAAIP,GAAO,OAAGM,GAAO,CAC/BE,OAAQ,SACRC,QAASR,IACTS,KAAM5E,KAAKC,UAAUP,KACpB8B,MAAK,SAACqD,GAAQ,OAAKA,EAASC,MAAM,KAAC,0CALD,EAMvC,E","sources":["components/JobWidget/JobWidget.tsx","pages/Candidate/CandidateLandingPage/components/RecomendedJobsWidget.tsx","components/QuickProfileWidget/QuickProfileWidget.tsx","pages/Candidate/CandidateLandingPage/components/TrendingJobs.tsx","pages/Candidate/CandidateLandingPage/CandidateLanding.tsx","pages/Recruiter/LandingPage/components/RecommenededCandidatesWidget.tsx","pages/Recruiter/LandingPage/components/JobsPosted.tsx","pages/Recruiter/LandingPage/RecruiterLanding.tsx","pages/LandingPage/LandingPage.tsx","redux/actions.ts","utils/makeRequest.ts"],"sourcesContent":["import React from \"react\";\nimport { Card, Avatar } from \"antd\";\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\n\nimport { JobWidgetPropTypes } from \"./types\";\nimport { iconStyles } from \"../../utils\";\nimport \"./JobWidget.scss\";\n\nconst JobWidget: React.FC<JobWidgetPropTypes> = (props) => {\n  const { jobTitle, skills, jobLocation, exp, ctc, companyName, jobslug } =\n    props;\n  const mappableSkills =\n    typeof skills === \"string\" ? skills.split(\",\") : skills;\n\n  return (\n    <div className=\"single-widget\">\n      <Card hoverable onClick={() => props?.onClick(jobslug)}>\n        <section className=\"single-widget__each-widget\">\n          <Avatar size={55}>{jobTitle[0]}</Avatar>\n          <div className=\"right-section\">\n            <span>{companyName}</span>\n            <h3 title={jobTitle}>{jobTitle}</h3>\n          </div>\n        </section>\n        <section className=\"single-widget__tag-section\">\n          {mappableSkills.map((itm: string) => (\n            <span className=\"tags\" key={itm}>\n              {itm}\n            </span>\n          ))}\n        </section>\n        <section className=\"single-widget__footer-section\">\n          <div>\n            <MdLocationOn style={iconStyles} />\n            {jobLocation}\n          </div>\n          <div>\n            <MdMonetizationOn\n              style={iconStyles}\n              title={`${ctc} Lacs per annum`}\n            />\n            {ctc} LPA\n          </div>\n          <div>\n            <MdHistory style={iconStyles} />\n            {exp} year\n          </div>\n          {/* <Tooltip title={`${numberOfApplications} already applied`} placement=\"topRight\"><span className=\"numbers-applied\">{numberOfApplications}+</span></Tooltip> */}\n        </section>\n      </Card>\n    </div>\n  );\n};\n\nexport default JobWidget;\n","import React, { useEffect } from \"react\";\nimport { Button, Empty } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport JobWidget from \"../../../../components/JobWidget\";\nimport { fetchRecommendedJobs, StateTypes } from \"../../../../redux\";\nimport \"../CandidateLandingPage.scss\";\n\ninterface RecommCandidateWidgetPropTypes {\n  recommendedJobs: any;\n  fetchRecommendedJobs: () => void;\n}\n\nconst RecommCandidateWidget: React.FC<RecommCandidateWidgetPropTypes> = (\n  props\n) => {\n  const { recommendedJobs, fetchRecommendedJobs } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (recommendedJobs.length === 0) fetchRecommendedJobs();\n  }, []);\n\n  const handleCardClick = (jobslug: string) => {\n    navigate(`/job-detail/${jobslug}`);\n  };\n\n  return (\n    <div className=\"recommended-job-widget\">\n      <h2>Recommended jobs for you</h2>\n      <div className=\"recommended-job-widget-container\">\n        {recommendedJobs.length > 0 ? (\n          recommendedJobs\n            .slice(0, 4)\n            .map((itm: any) => (\n              <JobWidget\n                key={itm.jobslug}\n                {...{ ...itm, onClick: handleCardClick }}\n              />\n            ))\n        ) : (\n          <div className=\"recommended-job-widget__empty\">\n            <Empty />\n          </div>\n        )}\n      </div>\n      {recommendedJobs.length > 4 ? (\n        <div className=\"see-more-container\">\n          <Button onClick={() => navigate(\"/search?q=recommended\")}>\n            See more...\n          </Button>\n        </div>\n      ) : (\n        <br />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  recommendedJobs: state.recommendedJobs,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchRecommendedJobs,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecommCandidateWidget);\n","import React from \"react\";\nimport { Card, Avatar } from \"antd\";\nimport { QuickProfilePropTypes } from \"./types\";\nimport \"./QuickProfileWidget.scss\";\n\nconst QuickProfileWidget: React.FC<QuickProfilePropTypes> = (props) => {\n  const { title, subtitle, onClick } = props;\n  return (\n    <div className=\"quick-profile\" onClick={onClick}>\n      <Card hoverable>\n        <div className=\"quick-profile__avatar\">\n          <Avatar size={55}>{title ? title[0] : \"\"}</Avatar>\n        </div>\n        <div className=\"quick-profile__content\">\n          <h3>\n            <strong title={title}>{title}</strong>\n          </h3>\n          <p>{subtitle}</p>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default QuickProfileWidget;\n","import React, { useEffect } from \"react\";\nimport { Button, Empty } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport JobWidget from \"../../../../components/JobWidget\";\nimport {\n  fetchTrendingJobs,\n  fetchJobDetail,\n  StateTypes,\n  setSearchType,\n} from \"../../../../redux\";\nimport { TrendingJobsPropTypes } from \"..\";\nimport \"../CandidateLandingPage.scss\";\n\nconst TrendingJobs: React.FC<TrendingJobsPropTypes> = (props) => {\n  const { trendingJobs, fetchTrendingJobs } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (trendingJobs.length === 0) fetchTrendingJobs();\n  }, []);\n\n  const handleCardClick = (jobslug: string) => {\n    navigate(`/job-detail/${jobslug}`);\n  };\n\n  return (\n    <div className=\"recommended-job-widget\">\n      <h2>Top trending jobs</h2>\n      <div className=\"recommended-job-widget-container\">\n        {trendingJobs.length > 0 ? (\n          trendingJobs\n            .slice(0, 4)\n            .map((itm: any) => (\n              <JobWidget\n                key={itm.jobslug}\n                {...{ ...itm, onClick: handleCardClick }}\n              />\n            ))\n        ) : (\n          <div className=\"recommended-job-widget__empty\">\n            <Empty />\n          </div>\n        )}\n      </div>\n      {trendingJobs.length > 4 ? (\n        <div className=\"see-more-container\">\n          <Button\n            onClick={() => {\n              navigate(\"/search?q=trending\");\n              setSearchType(\"trending\");\n            }}\n          >\n            See more...\n          </Button>\n        </div>\n      ) : (\n        <br />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  trendingJobs: state.trendingJobs,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchTrendingJobs,\n      fetchJobDetail,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrendingJobs);\n","import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RecommCandidateWidget from \"./components/RecomendedJobsWidget\";\nimport QuickProfileWidget from \"../../../components/QuickProfileWidget/QuickProfileWidget\";\nimport TopTrending from \"./components/TrendingJobs\";\nimport { fetchCanProfile, StateTypes } from \"../../../redux\";\nimport { CandidateLandingPagePropTypes } from \".\";\nimport \"./CandidateLandingPage.scss\";\n\nconst CandidateLandingPage: React.FC<CandidateLandingPagePropTypes> = (\n  props\n) => {\n  const { handleProfileClick, fetchCanProfile, profileDetails } = props;\n\n  useEffect(() => {\n    if (Object.keys(profileDetails).length === 0) fetchCanProfile();\n  }, []);\n\n  return (\n    <div className=\"candidate-landing\">\n      <div className=\"candidate-landing__left\">\n        <QuickProfileWidget\n          onClick={handleProfileClick}\n          title={profileDetails.name}\n          subtitle={profileDetails.jobTitle}\n        />\n      </div>\n      <div className=\"candidate-landing__right\">\n        <RecommCandidateWidget />\n        <TopTrending />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  profileDetails: state.profileDetails,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchCanProfile,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CandidateLandingPage);\n","import React, { useEffect } from \"react\";\nimport { Button, Card, Avatar, Empty } from \"antd\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nimport {\n  fetchRecommendedCandidates,\n  StateTypes,\n  setRecruiterCandidateDetails,\n} from \"../../../../redux\";\nimport { RecommenededCandidatesWidgetTypes, SingleWidgetTypes } from \"..\";\nimport \"../RecruiterLanding.scss\";\n\nconst SingleWidget: React.FC<SingleWidgetTypes> = (props) => {\n  const { skills, jobTitle, name, handleClick } = props;\n\n  return (\n    <Card\n      hoverable\n      onClick={() => handleClick(props)}\n      className=\"recommended-candidate__widget__card\"\n    >\n      <section className=\"each-widget\">\n        <Avatar size={55}>{name[0]}</Avatar>\n        <div className=\"right-section\">\n          <h3>{name}</h3>\n          <span>{jobTitle}</span>\n        </div>\n      </section>\n      <div className=\"tag-section\">\n        {skills.map((itm: string) => (\n          <span className=\"tags\" key={itm}>\n            {itm}\n          </span>\n        ))}\n      </div>\n    </Card>\n  );\n};\n\nconst RecommenededCandidatesWidget: React.FC<\n  RecommenededCandidatesWidgetTypes\n> = (props) => {\n  const {\n    recommendedCandidates,\n    fetchRecommendedCandidates,\n    setRecruiterCandidateDetails,\n  } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (recommendedCandidates.length === 0) fetchRecommendedCandidates();\n  }, []);\n\n  const handleClick = (values: SingleWidgetTypes) => {\n    setRecruiterCandidateDetails(values);\n    navigate(`/candidate/recommended/${values.aboutid}`);\n  };\n\n  const handleSeeMore = () => {\n    navigate(\"/recruiter/search\");\n  };\n\n  return (\n    <div className=\"recommended-candidates-widget\">\n      <h2>Recommended candidates</h2>\n      {recommendedCandidates.length ? (\n        <>\n          <div className=\"recommended-candidates-widget-container\">\n            {recommendedCandidates.slice(0, 3).map((itm: any) => (\n              <SingleWidget key={itm} {...{ ...itm, handleClick }} />\n            ))}\n          </div>\n          {recommendedCandidates.length > 3 && (\n            <div className=\"see-more-container\">\n              <Button onClick={handleSeeMore}>See more...</Button>\n            </div>\n          )}\n        </>\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  recommendedCandidates: state.recommendedCandidates,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchRecommendedCandidates,\n      setRecruiterCandidateDetails,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecommenededCandidatesWidget);\n","import React, { useEffect } from \"react\";\nimport { Button, Empty, Tooltip } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { FaPlus } from \"react-icons/fa\";\n\nimport JobWidget from \"../../../../components/JobWidget\";\nimport { RecommCandidateWidgetPropTypes } from \"..\";\nimport { fetchPostedJobs, fetchJobDetail, StateTypes } from \"../../../../redux\";\nimport \"../RecruiterLanding.scss\";\n\nconst RecommCandidateWidget: React.FC<RecommCandidateWidgetPropTypes> = (\n  props\n) => {\n  const { recentJobs, fetchPostedJobs } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (recentJobs.length === 0) fetchPostedJobs();\n  }, []);\n\n  const handleJobCardClick = (jobSlug: string) => {\n    navigate(`/recruiter/post/${jobSlug}`);\n  };\n\n  return (\n    <>\n      <div className=\"posted-jobs\">\n        <h2>Jobs posted by you</h2>\n        {recentJobs.length > 0 ? (\n          <div className=\"posted-jobs__container\">\n            {recentJobs.map((itm: any) => (\n              <JobWidget\n                key={JSON.stringify(itm)}\n                {...{ ...itm, onClick: handleJobCardClick }}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"post-jobs__empty-section__button\">\n            <Empty description=\"No Data, Please post a job and manage here!\" />\n            <Button\n              onClick={() => navigate(\"/recruiter/postjob\")}\n              type=\"primary\"\n            >\n              <FaPlus className=\"icon\" />\n              &nbsp;Post a Job\n            </Button>\n          </div>\n        )}\n      </div>\n      <div className=\"posted-jobs__footer\">\n        <Tooltip title=\"Post a job\">\n          <Button\n            shape=\"circle\"\n            onClick={() => navigate(\"/recruiter/postjob\")}\n            type=\"primary\"\n          >\n            <FaPlus className=\"icon\" />\n          </Button>\n        </Tooltip>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  recentJobs: state.recentJobs,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchPostedJobs,\n      fetchJobDetail,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecommCandidateWidget);\n","import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport QuickProfileWidget from \"../../../components/QuickProfileWidget/QuickProfileWidget\";\nimport RecommenededCandidatesWidget from \"./components/RecommenededCandidatesWidget\";\nimport JobsPosted from \"./components/JobsPosted\";\nimport { fetchRecProfile } from \"../../../redux\";\nimport { StateTypes } from \"../../../redux\";\nimport { RecruiterLandingPropTypes } from \"./types\";\nimport \"./RecruiterLanding.scss\";\n\nconst RecruiterLanding: React.FC<RecruiterLandingPropTypes> = (props) => {\n  const { fetchRecProfile, handleProfileClick, profileDetails } = props;\n\n  useEffect(() => {\n    if (Object.keys(profileDetails).length === 0) fetchRecProfile();\n  }, []);\n\n  return (\n    <div className=\"recruiter-landing\">\n      <div className=\"recruiter-landing__left\">\n        <QuickProfileWidget\n          onClick={handleProfileClick}\n          title={profileDetails.name}\n          subtitle={profileDetails.location}\n        />\n        <RecommenededCandidatesWidget />\n      </div>\n      <div className=\"recruiter-landing__right\">\n        <JobsPosted />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  profileDetails: state.profileDetails,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchRecProfile,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterLanding);\n","import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nimport CandidateLanding from \"../Candidate/CandidateLandingPage\";\nimport RecruiterLanding from \"../Recruiter/LandingPage\";\nimport Loader from \"../../components/Loader\";\nimport { setIsAuth, setUserType, StateTypes } from \"../../redux\";\nimport { UserTypeTypes } from \"../../routes\";\nimport { LandingPagePropTypes } from \"./types\";\nimport { getUser, isAuthenticated } from \"../../utils\";\n\nconst LandingPage: React.FC<LandingPagePropTypes> = (props) => {\n  const { userType, setUserType, loading } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      const { user } = getUser();\n      const type = user.role === \"userCandidate\" ? \"candidate\" : \"recruiter\";\n      setUserType(type);\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  const handleProfileClick = async () => {\n    const { user } = getUser();\n    const type = user.role === \"userCandidate\" ? \"candidate\" : \"recruiter\";\n    setUserType(type);\n    navigate(`/${type}/profile`);\n  };\n\n  const getLandingUI = (user: UserTypeTypes) => {\n    switch (user) {\n      case \"candidate\":\n        return <CandidateLanding {...{ handleProfileClick }} />;\n      case \"recruiter\":\n        return <RecruiterLanding {...{ handleProfileClick }} />;\n      default:\n        return loading ? <div /> : <Loader />;\n    }\n  };\n\n  return <div className=\"landing-page-container\">{getLandingUI(userType)}</div>;\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  userType: state.userType,\n  loading: state.loading,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      setUserType,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n","import { notification } from \"antd\";\nimport {\n  CandidateSubmitTypes,\n  RecruitereSubmitTypes,\n} from \"../pages/Onboarding/types\";\nimport { UserTypeTypes } from \"../routes\";\nimport makeRequest from \"../utils/makeRequest\";\nimport { unionArray } from \"../utils\";\nimport { DispatchType } from \"./types\";\nimport { SearchType, StateTypes, store } from \".\";\n\nexport const setIsAuth = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: data,\n    });\n  };\n};\n\nexport const setLoading = (value: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_LOADING\",\n      payload: value,\n    });\n  };\n};\n\nexport const setUserType = (userType: UserTypeTypes) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_USER_TYPE\",\n      payload: userType,\n    });\n  };\n};\n\nexport const setActiveJobModalVisible = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_ACTIVE_JOB_MODAL_VISIBLE\",\n      payload: data,\n    });\n  };\n};\n\n// fetch candidate profile details\nexport const fetchCanProfile = () => {\n  return async (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    try {\n      const { data } = await makeRequest.get(\"/api/user-can/user\");\n      dispatch({\n        type: \"SET_PROFILE_DETAIL\",\n        payload: data.user,\n      });\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    } catch (e) {\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    }\n  };\n};\n\n// fetch recriter profile details\nexport const fetchRecProfile = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/user-rec/user\")\n      .then((data) => {\n        dispatch({\n          type: \"SET_PROFILE_DETAIL\",\n          payload: data.user,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveCandidateData = (\n  values: CandidateSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-can/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveRecruiterData = (\n  values: RecruitereSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-rec/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const createJobPost = (values: RecruitereSubmitTypes, callback: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/jobs/job\", values)\n      .then((data) => {\n        dispatch({\n          type: \"ADD_JOB_POST\",\n          payload: data?.jobDetail?.jobUploaded,\n        });\n        notification.success({\n          message: \"Job posted successfully\",\n          description:\n            \"Please visit the recent jobs posted section to get updates!\",\n        });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchPostedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/jobs/job\")\n      .then((data) => {\n        dispatch({ type: \"SET_POSTED_JOBS\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data.jobRecord,\n            \"jobslug\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const applyForJob = (id: string, callback?: () => void) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(`/api/user-can/apply`, { jobid: id })\n      .then((data) => {\n        if (data?.success) {\n          dispatch({ type: \"SET_LOADING\", payload: false });\n          callback && callback();\n          notification.success({\n            message: \"Hurray!, applied successfully\",\n          });\n        } else if (data?.message) {\n          notification.error({\n            message: \"Already applied!\",\n          });\n          dispatch({ type: \"SET_LOADING\", payload: false });\n        }\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const getJobDetails = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchTrendingJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/trend`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecommendedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/reco`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchJobDetail = (id: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${id}`)\n      .then((data) => {\n        dispatch({ type: \"SET_ACTIVE_JOB\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchRecommendedCandidates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcans`)\n      .then((data) => {\n        dispatch({ type: \"SET_RECOMMENDED_CANDIDATES\", payload: data.user });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const setRecruiterCandidateDetails = (values: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_RECRUITER_CANDIDATE_DETAILS\", payload: values });\n  };\n};\n\nexport const setSearchType = (searchType: SearchType) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_SEARCH_TYPE\", payload: searchType });\n  };\n};\n\nexport const fetchCompanySearchData = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_COMPANY_SEARCH\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchAppliedCandidates = (jobslug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/applied?jobid=${jobslug}`)\n      .then((data) => {\n        if (data?.enrolledCandidate) {\n          dispatch({\n            type: \"SET_APPLIED_CANDIDATES\",\n            payload: unionArray(\n              store.getState().appliedCandidates,\n              data.enrolledCandidate,\n              \"userId\"\n            ),\n          });\n        } else {\n          dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchCandidateDetails = (aboutId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${aboutId}`)\n      .then((data) => {\n        if (data?.user?.about) {\n          const tempStore: StateTypes = store.getState();\n          const type = tempStore.searchType;\n          let tempObect = [];\n          switch (type) {\n            case \"recommended\":\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                  dispatch({\n                    type: \"SET_RECRUITER_CANDIDATE_DETAILS\",\n                    payload: itm,\n                  });\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n            case \"skillSearch\":\n              tempObect = tempStore.skillSearch.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n              break;\n            default:\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n          }\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecruiterSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/search-can?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data?.user,\n            \"aboutid\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchCities = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/cities\")\n      .then((data) => {\n        dispatch({ type: \"SET_CITIES\", payload: data?.cities });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkills = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/skills\")\n      .then((data) => {\n        dispatch({ type: \"SET_SKILLS\", payload: data?.skills });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const clearStates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"CLEAR_STATE\", payload: {} });\n  };\n};\n\nexport const fetchAppliedCandidateDetail = (userId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${userId}`)\n      .then((data) => {\n        const tempAppliedCandidates = store\n          .getState()\n          .appliedCandidates.map((itm: any) => {\n            if (itm?.userId === userId) {\n              itm = { ...itm, ...data.user };\n            }\n            return itm;\n          });\n        dispatch({\n          type: \"SET_APPLIED_CANDIDATES\",\n          payload: tempAppliedCandidates,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSearchJobDetail = (jobSlug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${jobSlug}`)\n      .then((data: any) => {\n        const tempStore: StateTypes = store.getState();\n        const type = tempStore.searchType;\n        let tempObect = [];\n        switch (type) {\n          case \"companySearch\":\n            tempObect = tempStore.companySearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_COMPANY_SEARCH\", payload: tempObect });\n            break;\n          case \"skillSearch\":\n            tempObect = tempStore.skillSearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n            break;\n          case \"recommended\":\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n          case \"trending\":\n            tempObect = tempStore.trendingJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_TRENDING_JOBS\", payload: tempObect });\n            break;\n          default:\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n","const baseUrl = \"http://localhost:3005\";\n// const baseUrl = \"http://3.131.169.145\";\n// const baseUrl = \"http://geekinsider.in\";\n\n// if (process.env.NODE_ENV === \"production\") {\n//   baseUrl = process.env.BASE_URL;\n// }\n\nconst getHeader = () => {\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  };\n};\n\nexport default {\n  async auth(URL: string, values: any) {\n    return fetch(`${baseUrl}/api/auth/${URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n  async get(URL: string) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"GET\",\n      headers: getHeader(),\n    }).then((response) => response.json());\n  },\n\n  async post(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"POST\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async put(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"PUT\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async delete(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"DELETE\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n};\n"],"names":["props","jobTitle","skills","jobLocation","exp","ctc","companyName","jobslug","mappableSkills","split","className","hoverable","onClick","size","title","map","itm","style","iconStyles","connect","state","recommendedJobs","dispatch","bindActionCreators","fetchRecommendedJobs","navigate","useNavigate","useEffect","length","handleCardClick","slice","subtitle","trendingJobs","fetchTrendingJobs","fetchJobDetail","setSearchType","profileDetails","fetchCanProfile","handleProfileClick","Object","keys","name","SingleWidget","handleClick","recommendedCandidates","fetchRecommendedCandidates","setRecruiterCandidateDetails","values","aboutid","recentJobs","fetchPostedJobs","handleJobCardClick","jobSlug","JSON","stringify","description","type","shape","fetchRecProfile","location","JobsPosted","userType","loading","setUserType","isAuthenticated","getUser","user","role","CandidateLanding","Loader","getLandingUI","setIsAuth","data","payload","setLoading","value","makeRequest","then","catch","saveCandidateData","callback","saveRecruiterData","createJobPost","jobDetail","jobUploaded","notification","message","jobRecord","fetchSkillSearch","join","unionArray","store","skillSearch","applyForJob","id","jobid","success","getJobDetails","cname","searchType","fetchCompanySearchData","fetchAppliedCandidates","enrolledCandidate","appliedCandidates","fetchCandidateDetails","aboutId","about","tempStore","tempObect","fetchRecruiterSkillSearch","fetchCities","cities","fetchSkills","clearStates","fetchAppliedCandidateDetail","userId","tempAppliedCandidates","fetchSearchJobDetail","companySearch","baseUrl","getHeader","Authorization","localStorage","getItem","auth","URL","fetch","method","headers","body","response","json","get","post","put","delete"],"sourceRoot":""}