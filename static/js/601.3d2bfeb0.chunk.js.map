{"version":3,"file":"static/js/601.3d2bfeb0.chunk.js","mappings":"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","sources":["components/NavBar/RecruiterSkillSearch.tsx","components/NavBar/Navbar.tsx","redux/actions.ts","utils/makeRequest.ts"],"sourcesContent":["import React from \"react\";\nimport { Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useNavigate, useLocation } from \"react-router\";\n\nimport {\n  fetchSkillSearch,\n  StateTypes,\n  setSearchType,\n  fetchRecruiterSkillSearch,\n} from \"../../redux\";\nimport { RecruiterSkillSearchPropTypes } from \"./types\";\nimport \"./Navbar.scss\";\n\nconst { Option } = Select;\n\nconst RecruiterSkillSearch: React.FC<RecruiterSkillSearchPropTypes> = (\n  props\n) => {\n  const {\n    fetchSkillSearch,\n    setSearchType,\n    userType,\n    fetchRecruiterSkillSearch,\n    skills,\n  } = props;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleChange = (values: string[]) => {\n    if (location?.pathname !== \"/search\") {\n      userType === \"candidate\"\n        ? navigate(\"/search\")\n        : navigate(\"/recruiter/search\");\n    }\n    if (values.length) {\n      userType === \"candidate\"\n        ? fetchSkillSearch(values)\n        : fetchRecruiterSkillSearch(values);\n      setSearchType(\"skillSearch\");\n    } else {\n      setSearchType(\"recommended\");\n    }\n  };\n\n  const handleClear = () => {\n    setSearchType(\"recommended\");\n  };\n\n  const handleClick = () => {\n    userType === \"candidate\"\n      ? navigate(\"/search\")\n      : navigate(\"/recruiter/search\");\n  };\n\n  return (\n    <Select\n      mode=\"multiple\"\n      placeholder={\n        userType === \"candidate\"\n          ? \"Search jobs via skills\"\n          : \"Search candidates via skills\"\n      }\n      style={{ width: userType === \"candidate\" ? \"50%\" : \"100%\" }}\n      onChange={handleChange}\n      onClick={handleClick}\n      allowClear\n      dropdownMatchSelectWidth={false}\n      onClear={handleClear}\n    >\n      {skills.map((itm: string) => (\n        <Option value={itm} key={itm}>\n          {itm}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  skillSearch: state.skillSearch,\n  userType: state.userType,\n  skills: state.skills,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchSkillSearch,\n      setSearchType,\n      fetchRecruiterSkillSearch,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecruiterSkillSearch);\n","import React, { useEffect } from \"react\";\nimport { Input, Dropdown, Menu, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useNavigate } from \"react-router\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nimport RecruiterSkillSearch from \"./RecruiterSkillSearch\";\nimport { NavBarPropTypes } from \"./types\";\nimport {\n  setLoading,\n  setUserType,\n  getJobDetails,\n  setSearchType,\n  fetchCompanySearchData,\n  clearStates,\n  StateTypes,\n  fetchCities,\n  fetchSkills,\n  setIsAuth,\n} from \"../../redux\";\nimport \"./Navbar.scss\";\nimport { getUser } from \"../../utils\";\n\nconst NavBar: React.FC<NavBarPropTypes> = (props) => {\n  const {\n    setIsAuth,\n    setUserType,\n    setLoading,\n    fetchCompanySearchData,\n    setSearchType,\n    userType,\n    fetchCities,\n    fetchSkills,\n    cities,\n    skills,\n    clearStates,\n  } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    cities.length === 0 && fetchCities();\n    skills.length === 0 && fetchSkills();\n  }, []);\n\n  const signOut = async () => {\n    setLoading(true);\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"user\");\n    setIsAuth(false);\n    navigate(\"/login\");\n    setLoading(false);\n    clearStates();\n  };\n\n  const autoCompleteStyles = {\n    width: \"50%\",\n    marginRight: \"20px\",\n  };\n\n  const handleGeekInsiderIconClick = () => navigate(\"/home\");\n\n  const handleProfileClick = async () => {\n    const { user } = getUser();\n    const type = user.role === \"userCandidate\" ? \"candidate\" : \"recruiter\";\n    setUserType(type);\n    const route = `/${type}/profile`;\n    navigate(route);\n  };\n\n  const handlePressEnter = (e: any) => {\n    if (e?.target?.value) {\n      const searchString = e.target.value;\n      fetchCompanySearchData(searchString);\n      setSearchType(\"companySearch\");\n    } else {\n      setSearchType(\"recommended\");\n    }\n  };\n\n  const handleSearch = (searchString: string) => {\n    if (searchString) {\n      fetchCompanySearchData(searchString);\n      setSearchType(\"companySearch\");\n    } else {\n      setSearchType(\"recommended\");\n    }\n  };\n\n  const handleClick = () => {\n    userType === \"candidate\"\n      ? navigate(\"/search\")\n      : navigate(\"/recruiter/search\");\n  };\n\n  return (\n    <div className=\"navbar\">\n      <header className=\"navbar__container\">\n        <div className=\"navbar__logo\" onClick={handleGeekInsiderIconClick}>\n          <h2>Geekinsider</h2>\n        </div>\n        <div className=\"navbar__center\">\n          {userType === \"candidate\" && (\n            <Input.Search\n              style={autoCompleteStyles}\n              placeholder=\"Search jobs by company name\"\n              onPressEnter={handlePressEnter}\n              onSearch={handleSearch}\n              onClick={handleClick}\n              allowClear\n            />\n          )}\n          <RecruiterSkillSearch />\n        </div>\n        <div className=\"navbar__right\">\n          <Dropdown\n            trigger={[\"click\"]}\n            overlay={\n              <Menu>\n                <Menu.Item onClick={handleProfileClick}>Profile</Menu.Item>\n                <Menu.Item onClick={signOut}>Logout</Menu.Item>\n              </Menu>\n            }\n            placement=\"bottomRight\"\n            arrow\n          >\n            <Button shape=\"circle\" size=\"large\" icon={<UserOutlined />} />\n          </Dropdown>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  userType: state.userType,\n  cities: state.cities,\n  skills: state.skills,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      setUserType,\n      setLoading,\n      getJobDetails,\n      setSearchType,\n      fetchCompanySearchData,\n      fetchCities,\n      fetchSkills,\n      clearStates,\n      setIsAuth,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import { notification } from \"antd\";\nimport {\n  CandidateSubmitTypes,\n  RecruitereSubmitTypes,\n} from \"../pages/Onboarding/types\";\nimport { UserTypeTypes } from \"../routes\";\nimport makeRequest from \"../utils/makeRequest\";\nimport { unionArray } from \"../utils\";\nimport { DispatchType } from \"./types\";\nimport { SearchType, StateTypes, store } from \".\";\n\nexport const setIsAuth = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: data,\n    });\n  };\n};\n\nexport const setLoading = (value: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_LOADING\",\n      payload: value,\n    });\n  };\n};\n\nexport const setUserType = (userType: UserTypeTypes) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_USER_TYPE\",\n      payload: userType,\n    });\n  };\n};\n\nexport const setActiveJobModalVisible = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_ACTIVE_JOB_MODAL_VISIBLE\",\n      payload: data,\n    });\n  };\n};\n\n// fetch candidate profile details\nexport const fetchCanProfile = () => {\n  return async (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    try {\n      const { data } = await makeRequest.get(\"/api/user-can/user\");\n      dispatch({\n        type: \"SET_PROFILE_DETAIL\",\n        payload: data.user,\n      });\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    } catch (e) {\n      dispatch({ type: \"SET_LOADING\", payload: false });\n    }\n  };\n};\n\n// fetch recriter profile details\nexport const fetchRecProfile = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/user-rec/user\")\n      .then((data) => {\n        dispatch({\n          type: \"SET_PROFILE_DETAIL\",\n          payload: data.user,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveCandidateData = (\n  values: CandidateSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-can/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveRecruiterData = (\n  values: RecruitereSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-rec/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const createJobPost = (values: RecruitereSubmitTypes, callback: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/jobs/job\", values)\n      .then((data) => {\n        dispatch({\n          type: \"ADD_JOB_POST\",\n          payload: data?.jobDetail?.jobUploaded,\n        });\n        notification.success({\n          message: \"Job posted successfully\",\n          description:\n            \"Please visit the recent jobs posted section to get updates!\",\n        });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchPostedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/jobs/job\")\n      .then((data) => {\n        dispatch({ type: \"SET_POSTED_JOBS\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data.jobRecord,\n            \"jobslug\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const applyForJob = (id: string, callback?: () => void) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(`/api/user-can/apply`, { jobid: id })\n      .then((data) => {\n        if (data?.success) {\n          dispatch({ type: \"SET_LOADING\", payload: false });\n          callback && callback();\n          notification.success({\n            message: \"Hurray!, applied successfully\",\n          });\n        } else if (data?.message) {\n          notification.error({\n            message: \"Already applied!\",\n          });\n          dispatch({ type: \"SET_LOADING\", payload: false });\n        }\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const getJobDetails = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchTrendingJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/trend`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecommendedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/reco`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchJobDetail = (id: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${id}`)\n      .then((data) => {\n        dispatch({ type: \"SET_ACTIVE_JOB\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchRecommendedCandidates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcans`)\n      .then((data) => {\n        dispatch({ type: \"SET_RECOMMENDED_CANDIDATES\", payload: data.user });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const setRecruiterCandidateDetails = (values: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_RECRUITER_CANDIDATE_DETAILS\", payload: values });\n  };\n};\n\nexport const setSearchType = (searchType: SearchType) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_SEARCH_TYPE\", payload: searchType });\n  };\n};\n\nexport const fetchCompanySearchData = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_COMPANY_SEARCH\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchAppliedCandidates = (jobslug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/applied?jobid=${jobslug}`)\n      .then((data) => {\n        if (data?.enrolledCandidate) {\n          dispatch({\n            type: \"SET_APPLIED_CANDIDATES\",\n            payload: unionArray(\n              store.getState().appliedCandidates,\n              data.enrolledCandidate,\n              \"userId\"\n            ),\n          });\n        } else {\n          dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchCandidateDetails = (aboutId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${aboutId}`)\n      .then((data) => {\n        if (data?.user?.about) {\n          const tempStore: StateTypes = store.getState();\n          const type = tempStore.searchType;\n          let tempObect = [];\n          switch (type) {\n            case \"recommended\":\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                  dispatch({\n                    type: \"SET_RECRUITER_CANDIDATE_DETAILS\",\n                    payload: itm,\n                  });\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n            case \"skillSearch\":\n              tempObect = tempStore.skillSearch.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n              break;\n            default:\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n          }\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecruiterSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/search-can?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data?.user,\n            \"aboutid\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchCities = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/cities\")\n      .then((data) => {\n        dispatch({ type: \"SET_CITIES\", payload: data?.cities });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkills = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/skills\")\n      .then((data) => {\n        dispatch({ type: \"SET_SKILLS\", payload: data?.skills });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const clearStates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"CLEAR_STATE\", payload: {} });\n  };\n};\n\nexport const fetchAppliedCandidateDetail = (userId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${userId}`)\n      .then((data) => {\n        const tempAppliedCandidates = store\n          .getState()\n          .appliedCandidates.map((itm: any) => {\n            if (itm?.userId === userId) {\n              itm = { ...itm, ...data.user };\n            }\n            return itm;\n          });\n        dispatch({\n          type: \"SET_APPLIED_CANDIDATES\",\n          payload: tempAppliedCandidates,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSearchJobDetail = (jobSlug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${jobSlug}`)\n      .then((data: any) => {\n        const tempStore: StateTypes = store.getState();\n        const type = tempStore.searchType;\n        let tempObect = [];\n        switch (type) {\n          case \"companySearch\":\n            tempObect = tempStore.companySearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_COMPANY_SEARCH\", payload: tempObect });\n            break;\n          case \"skillSearch\":\n            tempObect = tempStore.skillSearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n            break;\n          case \"recommended\":\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n          case \"trending\":\n            tempObect = tempStore.trendingJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_TRENDING_JOBS\", payload: tempObect });\n            break;\n          default:\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n","const baseUrl = \"http://localhost:3005\";\n// const baseUrl = \"http://3.131.169.145\";\n// const baseUrl = \"http://geekinsider.in\";\n\n// if (process.env.NODE_ENV === \"production\") {\n//   baseUrl = process.env.BASE_URL;\n// }\n\nconst getHeader = () => {\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  };\n};\n\nexport default {\n  async auth(URL: string, values: any) {\n    return fetch(`${baseUrl}/api/auth/${URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n  async get(URL: string) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"GET\",\n      headers: getHeader(),\n    }).then((response) => response.json());\n  },\n\n  async post(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"POST\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async put(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"PUT\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async delete(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"DELETE\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n};\n"],"names":["Option","Select","connect","state","skillSearch","userType","skills","dispatch","bindActionCreators","fetchSkillSearch","setSearchType","fetchRecruiterSkillSearch","props","navigate","useNavigate","location","useLocation","mode","placeholder","style","width","onChange","values","pathname","length","onClick","allowClear","dropdownMatchSelectWidth","onClear","map","itm","value","cities","setUserType","setLoading","getJobDetails","fetchCompanySearchData","fetchCities","fetchSkills","clearStates","setIsAuth","useEffect","signOut","localStorage","removeItem","handleProfileClick","getUser","user","type","role","route","className","marginRight","onPressEnter","e","target","searchString","onSearch","trigger","overlay","placement","arrow","shape","size","icon","UserOutlined","data","payload","fetchCanProfile","makeRequest","fetchRecProfile","then","catch","saveCandidateData","callback","saveRecruiterData","createJobPost","jobDetail","jobUploaded","notification","message","description","fetchPostedJobs","jobRecord","join","unionArray","store","applyForJob","id","jobid","success","cname","fetchTrendingJobs","fetchRecommendedJobs","fetchJobDetail","fetchRecommendedCandidates","setRecruiterCandidateDetails","searchType","fetchAppliedCandidates","jobslug","enrolledCandidate","appliedCandidates","fetchCandidateDetails","aboutId","about","tempStore","tempObect","recommendedCandidates","aboutid","fetchAppliedCandidateDetail","userId","tempAppliedCandidates","fetchSearchJobDetail","jobSlug","companySearch","recommendedJobs","trendingJobs","baseUrl","getHeader","Authorization","getItem","auth","URL","fetch","method","headers","body","JSON","stringify","response","json","get","post","put","delete"],"sourceRoot":""}