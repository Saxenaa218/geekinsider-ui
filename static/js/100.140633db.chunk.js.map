{"version":3,"file":"static/js/100.140633db.chunk.js","mappings":"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","sources":["components/SkillSection/SkillSection.tsx","pages/Recruiter/ManageAppliedCandidates/RightWidget.tsx","pages/Recruiter/ManageAppliedCandidates/ManageAppliedCandidates.tsx"],"sourcesContent":["import React from \"react\";\nimport { Progress } from \"antd\";\nimport { SkillSectionPropTypes } from \".\";\n\nconst SkillSection: React.FC<SkillSectionPropTypes> = (props) => {\n  const { gitInfo } = props;\n  const { repoCount, skills, skillsOrder } = gitInfo;\n  return (\n    <>\n      <section className=\"skills-section\">\n        <h3>\n          <b>Skills</b>\n        </h3>\n        {skills.map((itm: string, index: number) => {\n          return (\n            <>\n              <span>{itm}</span>\n              <Progress\n                percent={skillsOrder[index]}\n                showInfo={false}\n                strokeColor=\"#F2EE8B\"\n              />\n            </>\n          );\n        })}\n      </section>\n      {Boolean(repoCount) && (\n        <section className=\"github-repo-section\">\n          <h3>\n            <b>Github repo count</b>\n          </h3>\n          <h2>{repoCount}</h2>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default SkillSection;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button } from \"antd\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { FaGithub, FaWhatsapp } from \"react-icons/fa\";\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\n\nimport { generateGithubUrl, getWhatsAppUrl, iconStyles } from \"../../../utils\";\nimport { StateTypes, fetchAppliedCandidateDetail } from \"../../../redux\";\nimport About from \"../../../components/About\";\nimport SkillSection from \"../../../components/SkillSection\";\nimport \"./RightWidget.scss\";\n\nconst RightWidget: React.FC<any> = (props) => {\n  const [mappableSkills, setMappableSkills] = useState<string[]>([]);\n  const {\n    about,\n    name,\n    skills,\n    location,\n    ctc,\n    exp,\n    githubUrl,\n    whatsappNumber,\n    jobTitle,\n    userId,\n    gitInfo,\n    fetchAppliedCandidateDetail,\n  } = props;\n\n  useEffect(() => {\n    if (skills)\n      setMappableSkills(\n        typeof skills === \"string\" ? skills.split(\",\") : skills\n      );\n  }, [skills]);\n\n  useEffect(() => {\n    if (!gitInfo) {\n      fetchAppliedCandidateDetail(userId);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!gitInfo) {\n      fetchAppliedCandidateDetail(userId);\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"manage__applicants\">\n      <section className=\"each-widget\">\n        <div className=\"right-section\">\n          <h2>{name}</h2>\n          <span>{jobTitle}</span>\n        </div>\n        <div className=\"action-buttons\">\n          <Button\n            type=\"primary\"\n            href={getWhatsAppUrl(whatsappNumber, name)}\n            target=\"_blank\"\n          >\n            <FaWhatsapp className=\"whatsapp-icon\" />\n            &nbsp;Connect\n          </Button>\n        </div>\n      </section>\n      <section className=\"tags-section\">\n        {mappableSkills?.map((itm: string) => (\n          <span className=\"tags\" key={itm}>\n            {itm}\n          </span>\n        ))}\n      </section>\n      <section className=\"footer-section\">\n        <div>\n          <MdLocationOn style={iconStyles} />\n          {location}\n        </div>\n        <div title={`${ctc} lacs per annum`}>\n          <MdMonetizationOn style={iconStyles} />\n          {ctc} LPA\n        </div>\n        <div>\n          <MdHistory style={iconStyles} />\n          {exp} year\n        </div>\n        <div>\n          <FaGithub style={iconStyles} />\n          <a\n            href={generateGithubUrl(githubUrl)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Github\n          </a>\n        </div>\n      </section>\n      <About title=\"About\">{about}</About>\n      <br />\n      {gitInfo && Object.keys(gitInfo)?.length > 0 && (\n        <Card>\n          <div className=\"profile-footer\">\n            <SkillSection gitInfo={gitInfo} />\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchAppliedCandidateDetail,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightWidget);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Avatar, Empty } from \"antd\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useMatch } from \"react-router\";\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\n\nimport { StateTypes, fetchAppliedCandidates } from \"../../../redux\";\nimport { iconStyles } from \"../../../utils\";\nimport RightWidget from \"./RightWidget\";\nimport { ManageAppliedCandidatesPropTypes } from \".\";\nimport \"../../../components/JobWidget/JobWidget.scss\";\nimport \"./ManageAppliedCandidates.scss\";\n\nconst SingleWidget: React.FC<any> = (props) => {\n  const { exp, jobTitle, location, name, skills, selected } = props;\n  return (\n    <Card\n      hoverable\n      className={props?.userId === selected?.userId ? \"active-card\" : \"\"}\n      onClick={() => props?.onClick(props)}\n    >\n      <section className=\"single-widget__each-widget\">\n        <Avatar size={55}>{name[0]}</Avatar>\n        <div className=\"right-section\">\n          <h3 title={name}>{name}</h3>\n          <span>{jobTitle}</span>\n        </div>\n      </section>\n      <section className=\"single-widget__tag-section\">\n        {skills.map((itm: string) => (\n          <span className=\"tags\" key={itm}>\n            {itm}\n          </span>\n        ))}\n      </section>\n      <section className=\"single-widget__footer-section\">\n        <div>\n          <MdLocationOn style={iconStyles} />\n          {location}\n        </div>\n        <div>\n          <MdHistory style={iconStyles} />\n          {exp} year\n        </div>\n      </section>\n    </Card>\n  );\n};\n\nconst ManageAppliedCandidates: React.FC<ManageAppliedCandidatesPropTypes> = (\n  props\n) => {\n  const { appliedCandidates, fetchAppliedCandidates, activeJob } = props;\n  const { jobTitle, jobLocation, ctc } = activeJob;\n  const [selected, setSelected] = useState(appliedCandidates[0]);\n  const match: any = useMatch(\"/recruiter/post/:slug/applied-candidates\");\n\n  useEffect(() => {\n    setSelected(appliedCandidates[0]);\n  }, [appliedCandidates]);\n\n  useEffect(() => {\n    fetchAppliedCandidates(match.params.slug);\n  }, []);\n\n  const handleClick = (itm: any) => {\n    setSelected(itm);\n  };\n\n  return (\n    <div className=\"applied-jobs\">\n      <div className=\"applied-jobs__heading\">\n        <div>\n          <Avatar size={25}>{jobTitle[0]}</Avatar>\n          <span className=\"applied-jobs__job-title\">{jobTitle}</span>\n        </div>\n        <div>\n          <MdLocationOn style={iconStyles} />\n          {jobLocation}\n        </div>\n        <div title={`${ctc} lacs per annum`}>\n          <MdMonetizationOn style={iconStyles} />\n          {ctc} LPA\n        </div>\n      </div>\n      {appliedCandidates?.length > 0 ? (\n        <Row>\n          <Col\n            span={8}\n            xs={{ span: 12 }}\n            sm={{ span: 10 }}\n            md={{ span: 8 }}\n            lg={{ span: 6 }}\n          >\n            <div className=\"applied-jobs__left\">\n              {appliedCandidates.map((itm: any) => (\n                <SingleWidget\n                  key={itm}\n                  {...{ ...itm, onClick: handleClick, selected: selected }}\n                />\n              ))}\n            </div>\n          </Col>\n          <Col\n            span={16}\n            xs={{ span: 12 }}\n            sm={{ span: 14 }}\n            md={{ span: 16 }}\n            lg={{ span: 18 }}\n          >\n            <div className=\"applied-jobs__right\">\n              {selected && Object.keys(selected).length > 0 ? (\n                <RightWidget {...{ ...selected }} />\n              ) : (\n                <Empty />\n              )}\n            </div>\n          </Col>\n        </Row>\n      ) : (\n        <Empty description=\"No applicants\" />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  appliedCandidates: state.appliedCandidates,\n  activeJob: state.activeJob,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchAppliedCandidates,\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageAppliedCandidates);\n"],"names":["props","gitInfo","repoCount","skills","skillsOrder","className","map","itm","index","percent","showInfo","strokeColor","Boolean","connect","state","dispatch","bindActionCreators","fetchAppliedCandidateDetail","useState","mappableSkills","setMappableSkills","about","name","location","ctc","exp","githubUrl","whatsappNumber","jobTitle","userId","useEffect","split","type","href","getWhatsAppUrl","target","style","iconStyles","title","generateGithubUrl","rel","About","Object","keys","length","SkillSection","SingleWidget","selected","hoverable","onClick","size","appliedCandidates","activeJob","fetchAppliedCandidates","jobLocation","setSelected","match","useMatch","params","slug","handleClick","span","xs","sm","md","lg","description"],"sourceRoot":""}