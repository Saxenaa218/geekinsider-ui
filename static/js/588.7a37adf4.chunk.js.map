{"version":3,"file":"static/js/588.7a37adf4.chunk.js","mappings":"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","sources":["routes/Routes.tsx","utils/index.ts"],"sourcesContent":["import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { StateTypes } from \"../redux\";\nimport { isAuthenticated } from \"../utils\";\nimport Loader from \"../components/Loader\";\n\nconst Signup = lazy(() => import(\"../pages/Signup\"));\nconst Login = lazy(() => import(\"../pages/Login\"));\nconst LandingPage = lazy(() => import(\"../pages/LandingPage\"));\nconst NavBar = lazy(() => import(\"../components/NavBar\"));\nconst SearchResult = lazy(() => import(\"../pages/SearchAndFilters\"));\nconst RecruiterSearch = lazy(\n  () => import(\"../pages/Recruiter/RecruiterSearch\")\n);\nconst CandidateProfile = lazy(\n  () => import(\"../pages/Candidate/CandidateProfile\")\n);\nconst RecruiterProfile = lazy(\n  () => import(\"../pages/Recruiter/RecruiterProfile\")\n);\nconst CandidateJobDetail = lazy(\n  () => import(\"../pages/Candidate/CandidateJobDetail\")\n);\nconst ApplicationManager = lazy(\n  () => import(\"../pages/Recruiter/ApplicationManager\")\n);\nconst JobPostingForm = lazy(() => import(\"../pages/Recruiter/JobPostingForm\"));\nconst CandidateOnboarding = lazy(\n  () => import(\"../pages/Onboarding/CandidateOnboarding\")\n);\nconst RecruiterOnboarding = lazy(\n  () => import(\"../pages/Onboarding/RecruiterOnboarding\")\n);\nconst ManageAppliedCandidates = lazy(\n  () => import(\"../pages/Recruiter/ManageAppliedCandidates\")\n);\nconst RecruiterCandidateDetails = lazy(\n  () => import(\"../pages/Recruiter/RecruiterCandidateDetails\")\n);\n\nconst pages = [\n  {\n    pageLink: \"/home\",\n    view: LandingPage,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/postjob\",\n    view: JobPostingForm,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/candidate/onboarding\",\n    view: CandidateOnboarding,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/recruiter/onboarding\",\n    view: RecruiterOnboarding,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/search\",\n    view: SearchResult,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/login\",\n    view: Login,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/signup\",\n    view: Signup,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/candidate/profile\",\n    view: CandidateProfile,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/profile\",\n    view: RecruiterProfile,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/post/:slug\",\n    view: ApplicationManager,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/job-detail/:slug\",\n    view: CandidateJobDetail,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/post/:slug/applied-candidates\",\n    view: ManageAppliedCandidates,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/candidate/recommended/:slug\",\n    view: RecruiterCandidateDetails,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/search\",\n    view: RecruiterSearch,\n    showNavbar: true,\n  },\n];\n\nconst Routings: React.FC = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const userType = useSelector((state: StateTypes) => state.userType)\n  const isAuth = useSelector((state: StateTypes) => state.isAuth);\n  const loading = useSelector((state: StateTypes) => state.loading);\n  // const skills = useSelector((state: StateTypes) => state.skills)\n  // const cities = useSelector((state: StateTypes) => state.cities)\n  const invalidLocations = [\"\", \"/\", \"/login\", \"/signup\"];\n\n  const setIsAuth = (bool: boolean) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: bool,\n    });\n  };\n\n  const setUserType = (type: \"candidate\" | \"recruiter\" | \"\") => {\n    dispatch({\n      type: \"SET_USER_TYPE\",\n      payload: type,\n    });\n  };\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      const resp = JSON.parse(localStorage.getItem(\"user\"));\n      setIsAuth(true);\n      try {\n        const type = resp.role === \"userRecruiter\" ? \"recruiter\" : \"candidate\";\n        setUserType(type);\n      } catch (e) {\n        setIsAuth(false);\n        setUserType(\"\");\n        navigate(\"/login\");\n      }\n      // redirecting to home is these invalid urls will be requested\n      if (location?.pathname && invalidLocations.includes(location.pathname)) {\n        navigate(\"/home\");\n      }\n    } else {\n      // redirecting to login when user is not authenticated\n      setIsAuth(false);\n      setUserType(\"\");\n      navigate(\"/login\");\n    }\n  }, []);\n\n  return (\n    <>\n      {isAuth && (\n        <Suspense fallback={<div />}>\n          <NavBar />\n        </Suspense>\n      )}\n      {loading && (\n        <div className=\"loader--global\">\n          <Loader />\n        </div>\n      )}\n      <Routes>\n        {pages.map((page, index) => (\n          <Route path={page.pageLink} key={index} element={<page.view />} />\n        ))}\n        {/* <Navigate to=\"/home\" /> */}\n      </Routes>\n    </>\n  );\n};\n\nexport default Routings;\n","import * as CSS from \"csstype\";\n\nexport const industryTypes = [\n  \"Information Technology & Services\",\n  \"Hospital & Health Care\",\n  \"Construction\",\n  \"Retail\",\n  \"Education Management\",\n  \"Financial Services\",\n  \"Accounting\",\n  \"Computer Software\",\n  \"Higher Education\",\n  \"Automotive\",\n];\n\nexport const iconStyles: CSS.Properties<string | number> = {\n  position: \"relative\",\n  top: \"2px\",\n  marginRight: \"5px\",\n};\n\nexport const isAuthenticated = () => {\n  return localStorage.getItem(\"access_token\") ? true : false;\n};\n\nexport const generateGithubUrl = (userName: string) =>\n  `https://github.com/${userName}`;\n\nexport const whatsAppBaseUrl = \"https://wa.me\";\n\nexport const getWhatsAppUrl = (whatsappNumber: string, name: string) => {\n  let number = whatsappNumber;\n  number = number?.replace(/[^\\w\\s]/gi, \"\").replace(/ /g, \"\");\n  const url = `${whatsAppBaseUrl}/${number}?text=${encodeURI(\n    `Hello ${name}!!`\n  )}`;\n  return url;\n};\n\nexport const unionArray = (\n  firstArray: any,\n  secondArray: any,\n  uniqueKeyName: string\n) => {\n  const keys: any = {};\n  // accumulating keys as the uniqueKeyName with value as the whole object of the firstArray\n  for (const each of firstArray) {\n    keys[each[uniqueKeyName]] = each;\n  }\n\n  // checking if the second array has the key, if yes then replacing that object present in secondArray with the value of the key in keys object, else returning the object as is.\n  // everything gets accumulated in an array, returning that array\n  return secondArray.map((itm: any) => {\n    if (keys[itm[uniqueKeyName]]) {\n      return keys[itm[uniqueKeyName]];\n    } else return itm;\n  });\n};\n\nexport const getUser = () => {\n  return {\n    user: JSON.parse(localStorage.getItem(\"user\")),\n    token: localStorage.getItem(\"access_token\"),\n  };\n};\n"],"names":["Signup","lazy","Login","LandingPage","NavBar","SearchResult","RecruiterSearch","CandidateProfile","RecruiterProfile","CandidateJobDetail","ApplicationManager","pages","pageLink","view","showNavbar","location","useLocation","navigate","useNavigate","dispatch","useDispatch","isAuth","useSelector","state","loading","invalidLocations","setIsAuth","bool","type","payload","setUserType","useEffect","isAuthenticated","resp","JSON","parse","localStorage","getItem","role","e","pathname","includes","Suspense","fallback","className","Loader","map","page","index","path","element","industryTypes","iconStyles","position","top","marginRight","generateGithubUrl","userName","getWhatsAppUrl","whatsappNumber","name","number","replace","encodeURI","unionArray","firstArray","secondArray","uniqueKeyName","keys","each","itm","getUser","user","token"],"sourceRoot":""}